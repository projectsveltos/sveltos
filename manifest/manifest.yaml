---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: accessrequests.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: AccessRequest
    listKind: AccessRequestList
    plural: accessrequests
    singular: accessrequest
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AccessRequest is the Schema for the accessrequest API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AccessRequestSpec defines the desired state of AccessRequest
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the management cluster controlplane endpoint. It
                  will be used when generating the kubeconfig.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              name:
                description: Name is the name of the service account created for this
                  AccessRequest
                type: string
              namespace:
                description: Namespace is the namespace of the service account created
                  for this AccessRequest
                type: string
              type:
                description: Type represent the type of the request
                enum:
                - ClassifierAgent
                - Different
                type: string
            required:
            - controlPlaneEndpoint
            - name
            - namespace
            - type
            type: object
          status:
            description: AccessRequestStatus defines the status of AccessRequest
            properties:
              failureMessage:
                description: FailureMessage provides more information if an error
                  occurs.
                type: string
              secretRef:
                description: SecretRef points to the Secret containing Kubeconfig
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: classifierreports.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: ClassifierReport
    listKind: ClassifierReportList
    plural: classifierreports
    singular: classifierreport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClassifierReport is the Schema for the classifierreports API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClassifierReportSpec defines the desired state of ClassifierReport
            properties:
              classifierName:
                description: ClassifierName is the name of the Classifier instance
                  this report is for.
                type: string
              clusterName:
                description: ClusterName is the name of the Cluster this ClusterReport
                  is for.
                type: string
              clusterNamespace:
                description: ClusterNamespace is the namespace of the Cluster this
                  ClusterReport is for.
                type: string
              clusterType:
                description: ClusterType is the type of Cluster
                type: string
              match:
                description: Match indicates whether Cluster is currently a match
                  for the Classifier instance this report is for
                type: boolean
            required:
            - classifierName
            - clusterName
            - clusterNamespace
            - clusterType
            - match
            type: object
          status:
            description: ClassifierReportStatus defines the observed state of ClassifierReport
            properties:
              phase:
                description: Phase represents the current phase of report.
                enum:
                - WaitingForDelivery
                - Delivering
                - Processed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: classifiers.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: Classifier
    listKind: ClassifierList
    plural: classifiers
    singular: classifier
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Classifier is the Schema for the classifiers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClassifierSpec defines the desired state of Classifier
            properties:
              classifierLabels:
                description: ClassifierLabels is set of labels, key,value pair, that
                  will be added to each cluster matching Classifier instance
                items:
                  properties:
                    key:
                      description: Key is the label key
                      type: string
                    value:
                      description: Value is the label value
                      type: string
                  required:
                  - key
                  - value
                  type: object
                type: array
              deployedResourceConstraints:
                description: DeployedResourceConstraints allows to classify based
                  on current deployed resources
                items:
                  properties:
                    fieldFilters:
                      description: 'FieldFilters allows to filter resources based
                        on current field values. Internally uses FieldSelector so
                        only fields supported by FieldSelector can be used. Current
                        list: https://github.com/kubernetes/kubernetes/blob/9d577d8a29893062dfbd669997396dbd01ab0e47/pkg/apis/core/v1/conversion.go#L33'
                      items:
                        properties:
                          field:
                            description: Field is the field
                            type: string
                          operation:
                            description: Operation is the comparison operation
                            enum:
                            - Equal
                            - Different
                            type: string
                          value:
                            description: Value is the field value
                            type: string
                        required:
                        - field
                        - operation
                        - value
                        type: object
                      type: array
                    group:
                      description: Group of the resource deployed in the Cluster.
                      type: string
                    kind:
                      description: Kind of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    labelFilters:
                      description: LabelFilters allows to filter resources based on
                        current labels.
                      items:
                        properties:
                          key:
                            description: Key is the label key
                            type: string
                          operation:
                            description: Operation is the comparison operation
                            enum:
                            - Equal
                            - Different
                            type: string
                          value:
                            description: Value is the label value
                            type: string
                        required:
                        - key
                        - operation
                        - value
                        type: object
                      type: array
                    maxCount:
                      description: MaxCount is the maximun number of resources to
                        match
                      type: integer
                    minCount:
                      description: MinCount is the minimum number of resources to
                        match
                      type: integer
                    namespace:
                      description: Namespace of the resource deployed in the  Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    version:
                      description: Version of the resource deployed in the Cluster.
                      type: string
                  required:
                  - group
                  - kind
                  - version
                  type: object
                type: array
              kubernetesVersionConstraints:
                description: KubernetesVersionConstraints allows to classify based
                  on current kubernetes version
                items:
                  properties:
                    comparison:
                      description: Comparison indicate how to compare cluster kubernetes
                        version with the specified version
                      enum:
                      - Equal
                      - NotEqual
                      - GreaterThan
                      - LessThan
                      - GreaterThanOrEqualTo
                      - LessThanOrEqualTo
                      type: string
                    version:
                      description: Version is the kubernetes version
                      type: string
                  required:
                  - comparison
                  - version
                  type: object
                type: array
            required:
            - classifierLabels
            type: object
          status:
            description: ClassifierStatus defines the observed state of Classifier
            properties:
              clusterInfo:
                description: ClusterInfo reference all the cluster-api Cluster where
                  Classifier has been/is being deployed
                items:
                  properties:
                    cluster:
                      description: Cluster references the Cluster
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    failureMessage:
                      description: FailureMessage provides more information about
                        the error.
                      type: string
                    hash:
                      description: Hash represents the hash of the Classifier currently
                        deployed in the Cluster
                      format: byte
                      type: string
                    status:
                      description: Status represents the state of the feature in the
                        workload cluster
                      enum:
                      - Provisioning
                      - Provisioned
                      - Failed
                      - Removing
                      - Removed
                      type: string
                  required:
                  - cluster
                  - hash
                  type: object
                type: array
              machingClusterStatuses:
                description: MatchingClusterRefs reference all the cluster-api Cluster
                  currently matching Classifier
                items:
                  properties:
                    clusterRef:
                      description: ClusterRef references the matching Cluster
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    managedLabels:
                      description: ManagedLabels indicates the labels being managed
                        on the cluster by this Classifier instance
                      items:
                        type: string
                      type: array
                    unManagedLabels:
                      description: UnManagedLabel indicates the labels this Classifier
                        instance would like to manage but cannot because different
                        instance is already managing it
                      items:
                        properties:
                          failureMessage:
                            description: FailureMessage is a human consumable message
                              explaining the misconfiguration
                            type: string
                          key:
                            description: Key represents a label Classifier would like
                              to manage but cannot because currently managed by different
                              instance
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                  required:
                  - clusterRef
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusterhealthchecks.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: ClusterHealthCheck
    listKind: ClusterHealthCheckList
    plural: clusterhealthchecks
    singular: clusterhealthcheck
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterHealthCheck is the Schema for the clusterhealthchecks
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterHealthCheckSpec defines the desired state of ClusterHealthCheck
            properties:
              clusterSelector:
                description: ClusterSelector identifies clusters to associate to.
                type: string
              livenessChecks:
                description: LivenessChecks is a list of source of liveness checks
                  to evaluate. Anytime one of those changes, notifications will be
                  sent
                items:
                  properties:
                    livenessSourceRef:
                      description: LivenessSourceRef is a reference to a liveness-specific
                        resource that holds the details for the liveness check.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    name:
                      description: Name of the liveness check. Must be a DNS_LABEL
                        and unique within the ClusterHealthCheck.
                      type: string
                    type:
                      description: Type specifies the type of liveness
                      enum:
                      - Addons
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
              notifications:
                description: Notification is a list of source of events to evaluate.
                items:
                  properties:
                    name:
                      description: Name of the notification check. Must be a DNS_LABEL
                        and unique within the ClusterHealthCheck.
                      type: string
                    notificationRef:
                      description: NotificationRef is a reference to a notification-specific
                        resource that holds the details for the notification.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    type:
                      description: NotificationType specifies the type of notification
                      enum:
                      - KubernetesEvent
                      - Slack
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
            required:
            - clusterSelector
            - livenessChecks
            - notifications
            type: object
          status:
            properties:
              clusterCondition:
                description: ClusterConditions contains conditions and notification
                  status for all clusters matching ClusterHealthCheck instance
                items:
                  properties:
                    clusterInfo:
                      properties:
                        cluster:
                          description: Cluster references the Cluster
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        failureMessage:
                          description: FailureMessage provides more information about
                            the error.
                          type: string
                        hash:
                          description: Hash represents the hash of the Classifier
                            currently deployed in the Cluster
                          format: byte
                          type: string
                        status:
                          description: Status represents the state of the feature
                            in the workload cluster
                          enum:
                          - Provisioning
                          - Provisioned
                          - Failed
                          - Removing
                          - Removed
                          type: string
                      required:
                      - cluster
                      - hash
                      type: object
                    conditions:
                      description: Cluster conditions.
                      items:
                        description: Condition defines an observation of a Cluster
                          API resource operational state.
                        properties:
                          lastTransitionTime:
                            description: Last time the condition transitioned from
                              one status to another. This should be when the underlying
                              condition changed. If that is not known, then using
                              the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: A human readable message indicating details
                              about the transition. This field may be empty.
                            type: string
                          reason:
                            description: The reason for the condition's last transition
                              in CamelCase. The specific API may choose whether or
                              not this field is considered a guaranteed API. This
                              field may not be empty.
                            type: string
                          severity:
                            description: Severity provides an explicit classification
                              of Reason code, so the users or machines can immediately
                              understand the current situation and act accordingly.
                              The Severity field MUST be set only when Status=False.
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            type: string
                          type:
                            description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                            type: string
                        required:
                        - lastTransitionTime
                        - status
                        - type
                        type: object
                      type: array
                    notificationSummaries:
                      description: NotificationSummaries contains status information
                        on notifications
                      items:
                        properties:
                          failureMessage:
                            description: FailureMessage is a human consumable message
                              explaining the misconfiguration
                            type: string
                          name:
                            description: Name of the notification check.
                            type: string
                          status:
                            description: NotificationStatus specifies the notification
                              status
                            enum:
                            - Delivered
                            - FailedToDeliver
                            type: string
                        required:
                        - name
                        - status
                        type: object
                      type: array
                  required:
                  - clusterInfo
                  type: object
                type: array
              matchingClusters:
                description: MatchingClusterRefs reference all the clusters currently
                  matching ClusterHealthCheck ClusterSelector
                items:
                  description: "ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, \"must refer only to types A and B\" or \"UID not honored\"
                    or \"name must be restricted\". Those cannot be well described
                    when embedded. 3. Inconsistent validation.  Because the usages
                    are different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don't make new APIs embed an underspecified
                    API type they do not control. \n Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    ."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: debuggingconfigurations.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: DebuggingConfiguration
    listKind: DebuggingConfigurationList
    plural: debuggingconfigurations
    singular: debuggingconfiguration
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DebuggingConfiguration is the Schema for the debuggingconfigurations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DebuggingConfigurationSpec defines the desired state of DebuggingConfiguration
            properties:
              configuration:
                description: Configuration contains debugging configuration as granular
                  as per component.
                items:
                  description: ComponentConfiguration is the debugging configuration
                    to be applied to a Sveltos component.
                  properties:
                    component:
                      description: Component indicates which Sveltos component the
                        configuration applies to.
                      enum:
                      - SveltosManager
                      - Classifier
                      - ClassifierAgent
                      - SveltosClusterManager
                      - DriftDetectionManager
                      - AccessManager
                      - HealthCheckManager
                      type: string
                    logLevel:
                      description: 'LogLevel is the log severity above which logs
                        are sent to the stdout. [Default: Info]'
                      enum:
                      - LogLevelNotSet
                      - LogLevelInfo
                      - LogLevelDebug
                      - LogLevelVerbose
                      type: string
                  required:
                  - component
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: resourcesummaries.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: ResourceSummary
    listKind: ResourceSummaryList
    plural: resourcesummaries
    singular: resourcesummary
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ResourceSummary is the Schema for the ResourceSummary API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ResourceSummarySpec defines the desired state of ResourceSummary
            properties:
              chartResources:
                description: Resources deployed by ClusterSummary because of referenced
                  Helm charts
                items:
                  properties:
                    chartName:
                      description: ChartName is the chart name
                      minLength: 1
                      type: string
                    group:
                      description: Resources deployed by ClusterSummary because of
                        helm charts
                      items:
                        properties:
                          group:
                            description: Group of the resource deployed in the Cluster.
                            type: string
                          kind:
                            description: Kind of the resource deployed in the Cluster.
                            minLength: 1
                            type: string
                          name:
                            description: Name of the resource deployed in the Cluster.
                            minLength: 1
                            type: string
                          namespace:
                            description: Namespace of the resource deployed in the
                              Cluster. Empty for resources scoped at cluster level.
                            type: string
                          version:
                            description: Version of the resource deployed in the Cluster.
                            type: string
                        required:
                        - group
                        - kind
                        - name
                        - version
                        type: object
                      type: array
                    releaseName:
                      description: ReleaseName is the chart release
                      minLength: 1
                      type: string
                    releaseNamespace:
                      description: ReleaseNamespace is the namespace release will
                        be installed
                      minLength: 1
                      type: string
                  required:
                  - chartName
                  - releaseName
                  - releaseNamespace
                  type: object
                type: array
              resources:
                description: Resources deployed by ClusterSummary because of referenced
                  ConfigMaps/Secrets
                items:
                  properties:
                    group:
                      description: Group of the resource deployed in the Cluster.
                      type: string
                    kind:
                      description: Kind of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    name:
                      description: Name of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace of the resource deployed in the Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    version:
                      description: Version of the resource deployed in the Cluster.
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  - version
                  type: object
                type: array
            type: object
          status:
            description: ResourceSummaryStatus defines the status of ResourceSummary
            properties:
              helmResourceHashes:
                description: HelmResourceHashes specifies list of resource plus hash.
                items:
                  properties:
                    group:
                      description: Group of the resource deployed in the Cluster.
                      type: string
                    hash:
                      description: Hash is the hash of a resource's data.
                      type: string
                    kind:
                      description: Kind of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    name:
                      description: Name of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace of the resource deployed in the Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    version:
                      description: Version of the resource deployed in the Cluster.
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  - version
                  type: object
                type: array
              helmResourcesChanged:
                description: Helm Resources changed.
                type: boolean
              resourceHashes:
                description: ResourceHashes specifies a list of resource plus hash
                items:
                  properties:
                    group:
                      description: Group of the resource deployed in the Cluster.
                      type: string
                    hash:
                      description: Hash is the hash of a resource's data.
                      type: string
                    kind:
                      description: Kind of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    name:
                      description: Name of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace of the resource deployed in the Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    version:
                      description: Version of the resource deployed in the Cluster.
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  - version
                  type: object
                type: array
              resourcesChanged:
                description: Resources changed.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: rolerequests.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: RoleRequest
    listKind: RoleRequestList
    plural: rolerequests
    singular: rolerequest
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RoleRequest is the Schema for the rolerequest API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RoleRequestSpec defines the desired state of RoleRequest
            properties:
              admin:
                description: Admin is the name of the admin for which those permissions
                  are requested
                type: string
              clusterSelector:
                description: ClusterSelector identifies clusters where permissions
                  requestes in this instance will be granted
                type: string
              roleRefs:
                description: PolicyRefs references all the ConfigMaps containing kubernetes
                  Roles/ClusterRoles that need to be deployed in the matching clusters.
                items:
                  description: PolicyRef specifies a resource containing one or more
                    policy to deploy in matching Clusters.
                  properties:
                    kind:
                      description: 'Kind of the resource. Supported kinds are: Secrets
                        and ConfigMaps.'
                      enum:
                      - Secret
                      - ConfigMap
                      type: string
                    name:
                      description: Name of the rreferenced resource.
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace of the referenced resource. Namespace
                        can be left empty. In such a case, namespace will be implicit
                        set to cluster's namespace.
                      type: string
                  required:
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
            required:
            - clusterSelector
            type: object
          status:
            description: RoleRequestStatus defines the status of RoleRequest
            properties:
              clusterInfo:
                description: ClusterInfo represents the hash of the ClusterRoles/Roles
                  deployed in a matching cluster for the admin.
                items:
                  properties:
                    cluster:
                      description: Cluster references the Cluster
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    failureMessage:
                      description: FailureMessage provides more information about
                        the error.
                      type: string
                    hash:
                      description: Hash represents the hash of the Classifier currently
                        deployed in the Cluster
                      format: byte
                      type: string
                    status:
                      description: Status represents the state of the feature in the
                        workload cluster
                      enum:
                      - Provisioning
                      - Provisioned
                      - Failed
                      - Removing
                      - Removed
                      type: string
                  required:
                  - cluster
                  - hash
                  type: object
                type: array
              failureMessage:
                description: FailureMessage provides more information if an error
                  occurs.
                type: string
              matchingClusters:
                description: MatchingClusterRefs reference all the cluster currently
                  matching RoleRequest ClusterSelector
                items:
                  description: "ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, \"must refer only to types A and B\" or \"UID not honored\"
                    or \"name must be restricted\". Those cannot be well described
                    when embedded. 3. Inconsistent validation.  Because the usages
                    are different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don't make new APIs embed an underspecified
                    API type they do not control. \n Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    ."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: sveltosclusters.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: SveltosCluster
    listKind: SveltosClusterList
    plural: sveltosclusters
    singular: sveltoscluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SveltosCluster is the Schema for the SveltosCluster API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SveltosClusterSpec defines the desired state of SveltosCluster
            properties:
              paused:
                description: Paused can be used to prevent controllers from processing
                  the SveltosCluster and all its associated objects.
                type: boolean
            type: object
          status:
            description: SveltosClusterStatus defines the status of SveltosCluster
            properties:
              failureMessage:
                description: FailureMessage is a human consumable message explaining
                  the misconfiguration
                type: string
              ready:
                description: Ready is the state of the cluster.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: projectsveltos
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusterconfigurations.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: ClusterConfiguration
    listKind: ClusterConfigurationList
    plural: clusterconfigurations
    singular: clusterconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterConfiguration is the Schema for the clusterconfigurations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          status:
            description: ClusterConfigurationStatus defines the observed state of
              ClusterConfiguration
            properties:
              clusterProfileResources:
                description: ClusterProfileResources is the list of resources currently
                  deployed in a Cluster due to ClusterProfiles
                items:
                  description: ClusterProfileResource keeps info on all of the resources
                    deployed in this Cluster due to a given ClusterProfile
                  properties:
                    Features:
                      description: Features contains the list of policies deployed
                        in the Cluster because of a given feature
                      items:
                        properties:
                          charts:
                            description: Charts is a list of helm charts deployed
                              in the Cluster.
                            items:
                              properties:
                                appVersion:
                                  description: AppVersion is the version of the app
                                    deployed in the Cluster.
                                  type: string
                                chartVersion:
                                  description: ChartVersion is the version of the
                                    helm chart deployed in the Cluster.
                                  type: string
                                lastAppliedTime:
                                  description: LastAppliedTime identifies when this
                                    resource was last applied to the cluster.
                                  format: date-time
                                  type: string
                                namespace:
                                  description: Namespace where chart is deployed in
                                    the Cluster.
                                  type: string
                                releaseName:
                                  description: ReleaseName name of the release deployed
                                    in the Cluster.
                                  minLength: 1
                                  type: string
                                repoURL:
                                  description: RepoURL URL of the repo containing
                                    the helm chart deployed in the Cluster.
                                  minLength: 1
                                  type: string
                              required:
                              - chartVersion
                              - lastAppliedTime
                              - releaseName
                              - repoURL
                              type: object
                            type: array
                          featureID:
                            description: FeatureID is an indentifier of the feature
                              whose status is reported
                            enum:
                            - Resources
                            - Helm
                            type: string
                          resources:
                            description: Resources is a list of resources deployed
                              in the Cluster.
                            items:
                              properties:
                                group:
                                  description: Group of the resource deployed in the
                                    Cluster.
                                  type: string
                                kind:
                                  description: Kind of the resource deployed in the
                                    Cluster.
                                  minLength: 1
                                  type: string
                                lastAppliedTime:
                                  description: LastAppliedTime identifies when this
                                    resource was last applied to the cluster.
                                  format: date-time
                                  type: string
                                name:
                                  description: Name of the resource deployed in the
                                    Cluster.
                                  minLength: 1
                                  type: string
                                namespace:
                                  description: Namespace of the resource deployed
                                    in the Cluster. Empty for resources scoped at
                                    cluster level.
                                  type: string
                                owner:
                                  description: Owner is the list of ConfigMap/Secret
                                    containing this resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: 'If referring to a piece of an
                                        object instead of an entire object, this string
                                        should contain a valid JSON/Go field access
                                        statement, such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to
                                        a container within a pod, this would take
                                        on a value like: "spec.containers{name}" (where
                                        "name" refers to the name of the container
                                        that triggered the event) or if no container
                                        name is specified "spec.containers[2]" (container
                                        with index 2 in this pod). This syntax is
                                        chosen only to have some well-defined way
                                        of referencing a part of an object. TODO:
                                        this design is not final and this field is
                                        subject to change in the future.'
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info:
                                        https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    namespace:
                                      description: 'Namespace of the referent. More
                                        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                      type: string
                                    resourceVersion:
                                      description: 'Specific resourceVersion to which
                                        this reference is made, if any. More info:
                                        https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                      type: string
                                  type: object
                                version:
                                  description: Version of the resource deployed in
                                    the Cluster.
                                  minLength: 1
                                  type: string
                              required:
                              - group
                              - kind
                              - name
                              - owner
                              - version
                              type: object
                            type: array
                        required:
                        - featureID
                        type: object
                      type: array
                    clusterProfileName:
                      description: ClusterProfileName is the name of the ClusterProfile
                        matching the Cluster.
                      type: string
                  required:
                  - clusterProfileName
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusterprofiles.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: ClusterProfile
    listKind: ClusterProfileList
    plural: clusterprofiles
    singular: clusterprofile
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterProfile is the Schema for the clusterprofiles API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterProfileSpec defines the desired state of ClusterProfile
            properties:
              clusterSelector:
                description: ClusterSelector identifies clusters to associate to.
                type: string
              helmCharts:
                description: Helm charts
                items:
                  properties:
                    chartName:
                      description: ChartName is the chart name
                      minLength: 1
                      type: string
                    chartVersion:
                      description: ChartVersion is the chart version
                      minLength: 1
                      type: string
                    helmChartAction:
                      default: Install
                      description: HelmChartAction is the action that will be taken
                        on the helm chart
                      enum:
                      - Install
                      - Uninstall
                      type: string
                    releaseName:
                      description: ReleaseName is the chart release
                      minLength: 1
                      type: string
                    releaseNamespace:
                      description: ReleaseNamespace is the namespace release will
                        be installed
                      minLength: 1
                      type: string
                    repositoryName:
                      description: RepositoryName is the name helm chart repository
                      minLength: 1
                      type: string
                    repositoryURL:
                      description: RepositoryURL is the URL helm chart repository
                      minLength: 1
                      type: string
                    secretRef:
                      description: SecretRef contains confidential data that needs
                        to be used as values for templates
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    values:
                      description: 'Values holds the values for this Helm release.
                        Go templating with the values from the referenced CAPI Cluster.
                        Currently following can be referenced: - Cluster => CAPI Cluster
                        for instance - KubeadmControlPlane => the CAPI Cluster controlPlaneRef
                        - InfrastructureProvider => the CAPI cluster infrastructure
                        provider - SecretRef => store any confindetial information
                        in a Secret, set SecretRef then reference it'
                      type: string
                  required:
                  - chartName
                  - chartVersion
                  - releaseName
                  - releaseNamespace
                  - repositoryName
                  - repositoryURL
                  type: object
                type: array
              policyRefs:
                description: PolicyRefs references all the ConfigMaps/Secrets containing
                  kubernetes resources that need to be deployed in the matching CAPI
                  clusters.
                items:
                  description: PolicyRef specifies a resource containing one or more
                    policy to deploy in matching Clusters.
                  properties:
                    kind:
                      description: 'Kind of the resource. Supported kinds are: Secrets
                        and ConfigMaps.'
                      enum:
                      - Secret
                      - ConfigMap
                      type: string
                    name:
                      description: Name of the rreferenced resource.
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace of the referenced resource. Namespace
                        can be left empty. In such a case, namespace will be implicit
                        set to cluster's namespace.
                      type: string
                  required:
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
              stopMatchingBehavior:
                default: WithdrawPolicies
                description: StopMatchingBehavior indicates what behavior should be
                  when a Cluster stop matching the ClusterProfile. By default all
                  deployed Helm charts and Kubernetes resources will be withdrawn
                  from Cluster. Setting StopMatchingBehavior to LeavePolicies will
                  instead leave ClusterProfile deployed policies in the Cluster.
                type: string
              syncMode:
                default: Continuous
                description: SyncMode specifies how features are synced in a matching
                  workload cluster. - OneTime means, first time a workload cluster
                  matches the ClusterProfile, features will be deployed in such cluster.
                  Any subsequent feature configuration change won't be applied into
                  the matching workload clusters; - Continuous means first time a
                  workload cluster matches the ClusterProfile, features will be deployed
                  in such a cluster. Any subsequent feature configuration change will
                  be applied into the matching workload clusters. - DryRun means no
                  change will be propagated to any matching cluster. A report instead
                  will be generated summarizing what would happen in any matching
                  cluster because of the changes made to ClusterProfile while in DryRun
                  mode.
                enum:
                - OneTime
                - Continuous
                - ContinuousWithDriftDetection
                - DryRun
                type: string
            required:
            - clusterSelector
            type: object
          status:
            description: ClusterProfileStatus defines the observed state of ClusterProfile
            properties:
              matchingClusters:
                description: MatchingClusterRefs reference all the cluster-api Cluster
                  currently matching ClusterProfile ClusterSelector
                items:
                  description: "ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, \"must refer only to types A and B\" or \"UID not honored\"
                    or \"name must be restricted\". Those cannot be well described
                    when embedded. 3. Inconsistent validation.  Because the usages
                    are different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don't make new APIs embed an underspecified
                    API type they do not control. \n Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    ."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusterreports.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: ClusterReport
    listKind: ClusterReportList
    plural: clusterreports
    singular: clusterreport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterReport is the Schema for the clusterreports API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterReportSpec defines the desired state of ClusterReport
            properties:
              clusterName:
                description: ClusterName is the name of the CAPI Cluster this ClusterReport
                  is for.
                type: string
              clusterNamespace:
                description: ClusterNamespace is the namespace of the CAPI Cluster
                  this ClusterReport is for.
                type: string
            required:
            - clusterName
            - clusterNamespace
            type: object
          status:
            description: ClusterReportStatus defines the observed state of ClusterReport
            properties:
              releaseReports:
                description: ReleaseReports contains report on helm releases
                items:
                  properties:
                    action:
                      description: Action represent the type of operation on the Helm
                        Chart
                      enum:
                      - No Action
                      - Install
                      - Upgrade
                      - Delete
                      - Conflict
                      type: string
                    chartName:
                      description: ReleaseName of the release deployed in the CAPI
                        Cluster.
                      minLength: 1
                      type: string
                    chartVersion:
                      description: ChartVersion is the version of the helm chart deployed
                        in the CAPI Cluster.
                      type: string
                    message:
                      description: Message is for any message that needs to added
                        to better explain the action.
                      type: string
                    releaseNamespace:
                      description: Namespace where release is deployed in the CAPI
                        Cluster.
                      minLength: 1
                      type: string
                  required:
                  - chartName
                  - chartVersion
                  - releaseNamespace
                  type: object
                type: array
              resourceReports:
                description: ResourceReports contains report on Kubernetes resources
                items:
                  properties:
                    action:
                      description: Action represent the type of operation on the Kubernetes
                        resource.
                      enum:
                      - No Action
                      - Create
                      - Update
                      - Delete
                      - Conflict
                      type: string
                    message:
                      description: Message is for any message that needs to added
                        to better explain the action.
                      type: string
                    resource:
                      description: Resource contains information about Kubernetes
                        Resource
                      properties:
                        group:
                          description: Group of the resource deployed in the Cluster.
                          type: string
                        kind:
                          description: Kind of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                        lastAppliedTime:
                          description: LastAppliedTime identifies when this resource
                            was last applied to the cluster.
                          format: date-time
                          type: string
                        name:
                          description: Name of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                        namespace:
                          description: Namespace of the resource deployed in the Cluster.
                            Empty for resources scoped at cluster level.
                          type: string
                        owner:
                          description: Owner is the list of ConfigMap/Secret containing
                            this resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        version:
                          description: Version of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                      required:
                      - group
                      - kind
                      - name
                      - owner
                      - version
                      type: object
                  required:
                  - resource
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clustersummaries.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: ClusterSummary
    listKind: ClusterSummaryList
    plural: clustersummaries
    singular: clustersummary
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterSummary is the Schema for the clustersummaries API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSummarySpec defines the desired state of ClusterSummary
            properties:
              clusterName:
                description: ClusterName is the name of the workload Cluster this
                  ClusterSummary is for.
                type: string
              clusterNamespace:
                description: ClusterNamespace is the namespace of the workload Cluster
                  this ClusterSummary is for.
                type: string
              clusterProfileSpec:
                description: ClusterProfileSpec represent the configuration that will
                  be applied to the workload cluster.
                properties:
                  clusterSelector:
                    description: ClusterSelector identifies clusters to associate
                      to.
                    type: string
                  helmCharts:
                    description: Helm charts
                    items:
                      properties:
                        chartName:
                          description: ChartName is the chart name
                          minLength: 1
                          type: string
                        chartVersion:
                          description: ChartVersion is the chart version
                          minLength: 1
                          type: string
                        helmChartAction:
                          default: Install
                          description: HelmChartAction is the action that will be
                            taken on the helm chart
                          enum:
                          - Install
                          - Uninstall
                          type: string
                        releaseName:
                          description: ReleaseName is the chart release
                          minLength: 1
                          type: string
                        releaseNamespace:
                          description: ReleaseNamespace is the namespace release will
                            be installed
                          minLength: 1
                          type: string
                        repositoryName:
                          description: RepositoryName is the name helm chart repository
                          minLength: 1
                          type: string
                        repositoryURL:
                          description: RepositoryURL is the URL helm chart repository
                          minLength: 1
                          type: string
                        secretRef:
                          description: SecretRef contains confidential data that needs
                            to be used as values for templates
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        values:
                          description: 'Values holds the values for this Helm release.
                            Go templating with the values from the referenced CAPI
                            Cluster. Currently following can be referenced: - Cluster
                            => CAPI Cluster for instance - KubeadmControlPlane =>
                            the CAPI Cluster controlPlaneRef - InfrastructureProvider
                            => the CAPI cluster infrastructure provider - SecretRef
                            => store any confindetial information in a Secret, set
                            SecretRef then reference it'
                          type: string
                      required:
                      - chartName
                      - chartVersion
                      - releaseName
                      - releaseNamespace
                      - repositoryName
                      - repositoryURL
                      type: object
                    type: array
                  policyRefs:
                    description: PolicyRefs references all the ConfigMaps/Secrets
                      containing kubernetes resources that need to be deployed in
                      the matching CAPI clusters.
                    items:
                      description: PolicyRef specifies a resource containing one or
                        more policy to deploy in matching Clusters.
                      properties:
                        kind:
                          description: 'Kind of the resource. Supported kinds are:
                            Secrets and ConfigMaps.'
                          enum:
                          - Secret
                          - ConfigMap
                          type: string
                        name:
                          description: Name of the rreferenced resource.
                          minLength: 1
                          type: string
                        namespace:
                          description: Namespace of the referenced resource. Namespace
                            can be left empty. In such a case, namespace will be implicit
                            set to cluster's namespace.
                          type: string
                      required:
                      - kind
                      - name
                      - namespace
                      type: object
                    type: array
                  stopMatchingBehavior:
                    default: WithdrawPolicies
                    description: StopMatchingBehavior indicates what behavior should
                      be when a Cluster stop matching the ClusterProfile. By default
                      all deployed Helm charts and Kubernetes resources will be withdrawn
                      from Cluster. Setting StopMatchingBehavior to LeavePolicies
                      will instead leave ClusterProfile deployed policies in the Cluster.
                    type: string
                  syncMode:
                    default: Continuous
                    description: SyncMode specifies how features are synced in a matching
                      workload cluster. - OneTime means, first time a workload cluster
                      matches the ClusterProfile, features will be deployed in such
                      cluster. Any subsequent feature configuration change won't be
                      applied into the matching workload clusters; - Continuous means
                      first time a workload cluster matches the ClusterProfile, features
                      will be deployed in such a cluster. Any subsequent feature configuration
                      change will be applied into the matching workload clusters.
                      - DryRun means no change will be propagated to any matching
                      cluster. A report instead will be generated summarizing what
                      would happen in any matching cluster because of the changes
                      made to ClusterProfile while in DryRun mode.
                    enum:
                    - OneTime
                    - Continuous
                    - ContinuousWithDriftDetection
                    - DryRun
                    type: string
                required:
                - clusterSelector
                type: object
              clusterType:
                description: ClusterType is the type of Cluster
                type: string
            required:
            - clusterName
            - clusterNamespace
            - clusterType
            type: object
          status:
            description: ClusterSummaryStatus defines the observed state of ClusterSummary
            properties:
              featureSummaries:
                description: FeatureSummaries reports the status of each workload
                  cluster feature directly managed by ClusterProfile.
                items:
                  description: FeatureSummary contains a summary of the state of a
                    workload cluster feature.
                  properties:
                    deployedGroupVersionKind:
                      description: DeployedGroupVersionKind contains all GroupVersionKinds
                        deployed in the workload cluster because of this feature.
                        Each element has format kind.version.group
                      items:
                        type: string
                      type: array
                    failureMessage:
                      description: FailureMessage provides more information about
                        the error.
                      type: string
                    failureReason:
                      description: FailureReason indicates the type of error that
                        occurred.
                      type: string
                    featureID:
                      description: FeatureID is an indentifier of the feature whose
                        status is reported
                      enum:
                      - Resources
                      - Helm
                      type: string
                    hash:
                      description: Hash represents of a unique value for a feature
                        at a fixed point in time
                      format: byte
                      type: string
                    lastAppliedTime:
                      description: LastAppliedTime is the time feature was last reconciled
                      format: date-time
                      type: string
                    status:
                      description: Status represents the state of the feature in the
                        workload cluster
                      enum:
                      - Provisioning
                      - Provisioned
                      - Failed
                      - Removing
                      - Removed
                      type: string
                  required:
                  - featureID
                  - status
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              helmReleaseSummaries:
                description: HelmReleaseSummaries reports the status of each helm
                  chart directly managed by ClusterProfile.
                items:
                  properties:
                    conflictMessage:
                      description: Status indicates whether ClusterSummary can manage
                        the helm chart or there is a conflict
                      type: string
                    releaseName:
                      description: ReleaseName is the chart release
                      minLength: 1
                      type: string
                    releaseNamespace:
                      description: ReleaseNamespace is the namespace release will
                        be installed
                      minLength: 1
                      type: string
                    status:
                      description: Status indicates whether ClusterSummary can manage
                        the helm chart or there is a conflict
                      enum:
                      - Managing
                      - Conflict
                      type: string
                  required:
                  - releaseName
                  - releaseNamespace
                  - status
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fm-controller-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: fm-leader-election-role
  namespace: projectsveltos
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: fm-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterconfigurations/status
  verbs:
  - get
  - list
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterreports
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterreports/status
  verbs:
  - get
  - list
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - controlplane.cluster.x-k8s.io
  resources:
  - kubeadmcontrolplanes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fm-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fm-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: fm-leader-election-rolebinding
  namespace: projectsveltos
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fm-leader-election-role
subjects:
- kind: ServiceAccount
  name: fm-controller-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fm-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fm-manager-role
subjects:
- kind: ServiceAccount
  name: fm-controller-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fm-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fm-proxy-role
subjects:
- kind: ServiceAccount
  name: fm-controller-manager
  namespace: projectsveltos
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 86dad58d.projectsveltos.io
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: fm-manager-config
  namespace: projectsveltos
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: fm-manager-metrics-service
  namespace: projectsveltos
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: fm-controller-manager
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --v=5
        command:
        - /manager
        image: gianlucam76/sveltos-manager-amd64:v0.5.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 500m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.12.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: fm-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: tmp
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    control-plane: controller-manager
  name: fm-controller-manager-metrics-monitor
  namespace: projectsveltos
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  selector:
    matchLabels:
      control-plane: controller-manager

---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: classifier
  name: projectsveltos
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: classifier-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: classifier-leader-election-role
  namespace: projectsveltos
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: classifier-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - accessrequests
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifierreports
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifiers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifiers/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifiers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: classifier-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: classifier-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: classifier-leader-election-rolebinding
  namespace: projectsveltos
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: classifier-leader-election-role
subjects:
- kind: ServiceAccount
  name: classifier-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: classifier-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: classifier-manager-role
subjects:
- kind: ServiceAccount
  name: classifier-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: classifier-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: classifier-proxy-role
subjects:
- kind: ServiceAccount
  name: classifier-manager
  namespace: projectsveltos
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 1aea9208.projectsveltos.io
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: classifier-manager-config
  namespace: projectsveltos
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: classifier
  name: classifier-manager-metrics-service
  namespace: projectsveltos
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: classifier
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: classifier
  name: classifier-manager
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: classifier
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: classifier
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --report-mode=0
        - --v=5
        command:
        - /manager
        image: gianlucam76/classifier-amd64:v0.5.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 500m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.12.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: classifier-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: access-manager
  name: projectsveltos
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: access-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: access-leader-election-role
  namespace: projectsveltos
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: access-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - accessrequests
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - accessrequests/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - accessrequests/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifierreports
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - rolerequests
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - rolerequests/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - rolerequests/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: access-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: access-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: access-leader-election-rolebinding
  namespace: projectsveltos
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: access-leader-election-role
subjects:
- kind: ServiceAccount
  name: access-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: access-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: access-manager-role
subjects:
- kind: ServiceAccount
  name: access-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: access-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: access-proxy-role
subjects:
- kind: ServiceAccount
  name: access-manager
  namespace: projectsveltos
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: a70590d4.projectsveltos.io
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: access-manager-config
  namespace: projectsveltos
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: access-manager
  name: access-manager-metrics-service
  namespace: projectsveltos
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: access-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: access-manager
  name: access-manager
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: access-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: access-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --v=5
        command:
        - /manager
        image: gianlucam76/access-manager-amd64:v0.5.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.12.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: access-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: sc-manager
  name: projectsveltos
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sveltoscluster-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sveltoscluster-leader-election-role
  namespace: projectsveltos
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: sveltoscluster-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sveltoscluster-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sveltoscluster-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sveltoscluster-leader-election-rolebinding
  namespace: projectsveltos
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sveltoscluster-leader-election-role
subjects:
- kind: ServiceAccount
  name: sveltoscluster-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sveltoscluster-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sveltoscluster-manager-role
subjects:
- kind: ServiceAccount
  name: sveltoscluster-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sveltoscluster-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sveltoscluster-proxy-role
subjects:
- kind: ServiceAccount
  name: sveltoscluster-manager
  namespace: projectsveltos
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 03b9220a.projectsveltos.io
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: sveltoscluster-manager-config
  namespace: projectsveltos
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: sc-manager
  name: sveltoscluster-manager-metrics-service
  namespace: projectsveltos
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: sc-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: sc-manager
  name: sveltoscluster-manager
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: sc-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: sc-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: gianlucam76/sveltoscluster-manager-amd64:v0.5.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.12.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: sveltoscluster-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: hc-manager
  name: projectsveltos
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hc-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hc-leader-election-role
  namespace: projectsveltos
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: hc-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clusterhealthchecks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clusterhealthchecks/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clusterhealthchecks/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hc-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hc-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hc-leader-election-rolebinding
  namespace: projectsveltos
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hc-leader-election-role
subjects:
- kind: ServiceAccount
  name: hc-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hc-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hc-manager-role
subjects:
- kind: ServiceAccount
  name: hc-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hc-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hc-proxy-role
subjects:
- kind: ServiceAccount
  name: hc-manager
  namespace: projectsveltos
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 7964f530.projectsveltos.io
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: hc-manager-config
  namespace: projectsveltos
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: hc-manager
  name: hc-manager-metrics-service
  namespace: projectsveltos
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: hc-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: hc-manager
  name: hc-manager
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: hc-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: hc-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --v=5
        command:
        - /manager
        image: gianlucam76/healthcheck-manager-amd64:v0.5.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.12.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: hc-manager
      terminationGracePeriodSeconds: 10
---
