apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: accessrequests.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: AccessRequest
    listKind: AccessRequestList
    plural: accessrequests
    singular: accessrequest
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AccessRequest is the Schema for the accessrequest API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AccessRequestSpec defines the desired state of AccessRequest
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the management cluster controlplane endpoint. It
                  will be used when generating the kubeconfig.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              name:
                description: Name is the name of the service account created for this
                  AccessRequest
                type: string
              namespace:
                description: Namespace is the namespace of the service account created
                  for this AccessRequest
                type: string
              type:
                description: Type represent the type of the request
                enum:
                - SveltosAgent
                - Different
                type: string
            required:
            - controlPlaneEndpoint
            - name
            - namespace
            - type
            type: object
          status:
            description: AccessRequestStatus defines the status of AccessRequest
            properties:
              failureMessage:
                description: FailureMessage provides more information if an error
                  occurs.
                type: string
              secretRef:
                description: SecretRef points to the Secret containing Kubeconfig
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: classifierreports.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: ClassifierReport
    listKind: ClassifierReportList
    plural: classifierreports
    singular: classifierreport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClassifierReport is the Schema for the classifierreports API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              classifierName:
                description: ClassifierName is the name of the Classifier instance
                  this report is for.
                type: string
              clusterName:
                description: ClusterName is the name of the Cluster this ClusterReport
                  is for.
                type: string
              clusterNamespace:
                description: ClusterNamespace is the namespace of the Cluster this
                  ClusterReport is for.
                type: string
              clusterType:
                description: ClusterType is the type of Cluster
                type: string
              match:
                description: Match indicates whether Cluster is currently a match
                  for the Classifier instance this report is for
                type: boolean
            required:
            - classifierName
            - clusterName
            - clusterNamespace
            - clusterType
            - match
            type: object
          status:
            description: ClassifierReportStatus defines the observed state of ClassifierReport
            properties:
              phase:
                description: Phase represents the current phase of report.
                enum:
                - WaitingForDelivery
                - Delivering
                - Processed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: classifiers.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: Classifier
    listKind: ClassifierList
    plural: classifiers
    singular: classifier
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Classifier is the Schema for the classifiers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClassifierSpec defines the desired state of Classifier
            properties:
              classifierLabels:
                description: ClassifierLabels is set of labels, key,value pair, that
                  will be added to each cluster matching Classifier instance
                items:
                  properties:
                    key:
                      description: Key is the label key
                      type: string
                    value:
                      description: Value is the label value
                      type: string
                  required:
                  - key
                  - value
                  type: object
                type: array
              deployedResourceConstraint:
                description: DeployedResourceConstraint allows to classify based on
                  current deployed resources
                properties:
                  aggregatedClassification:
                    description: 'AggregatedClassification is optional and can be
                      used to specify a Lua function that will be used to further
                      detect whether the subset of the resources selected using the
                      ResourceSelector field are a match for this Classifier. The
                      function will receive the array of resources selected by ResourceSelectors.
                      If this field is not specified, a cluster is a match for Classifier
                      instance, if all ResourceSelectors returns at least one match.
                      This field allows to perform more complex evaluation  on the
                      resources, looking at all resources together. This can be useful
                      for more sophisticated tasks, such as identifying resources
                      that are related to each other or that have similar properties.
                      The Lua function must return a struct with: - "matching" field:
                      boolean indicating whether cluster is a match; - "message" field:
                      (optional) message.'
                    type: string
                  resourceSelectors:
                    description: ResourceSelectors identifies what resources to select
                      If no AggregatedClassification is specified, a cluster is a
                      match for Classifier instance, if all ResourceSelectors returns
                      at least one match.
                    items:
                      description: ResourceSelector defines what resources are a match
                      properties:
                        evaluate:
                          description: Evaluate contains a function "evaluate" in
                            lua language. The function will be passed one of the object
                            selected based on above criteria. Must return struct with
                            field "matching" representing whether object is a match
                            and an optional "message" field.
                          type: string
                        group:
                          description: Group of the resource deployed in the Cluster.
                          type: string
                        kind:
                          description: Kind of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                        labelFilters:
                          description: LabelFilters allows to filter resources based
                            on current labels.
                          items:
                            properties:
                              key:
                                description: Key is the label key
                                type: string
                              operation:
                                description: Operation is the comparison operation
                                enum:
                                - Equal
                                - Different
                                type: string
                              value:
                                description: Value is the label value
                                type: string
                            required:
                            - key
                            - operation
                            - value
                            type: object
                          type: array
                        namespace:
                          description: Namespace of the resource deployed in the  Cluster.
                            Empty for resources scoped at cluster level.
                          type: string
                        version:
                          description: Version of the resource deployed in the Cluster.
                          type: string
                      required:
                      - group
                      - kind
                      - version
                      type: object
                    type: array
                required:
                - resourceSelectors
                type: object
              kubernetesVersionConstraints:
                description: KubernetesVersionConstraints allows to classify based
                  on current kubernetes version
                items:
                  properties:
                    comparison:
                      description: Comparison indicate how to compare cluster kubernetes
                        version with the specified version
                      enum:
                      - Equal
                      - NotEqual
                      - GreaterThan
                      - LessThan
                      - GreaterThanOrEqualTo
                      - LessThanOrEqualTo
                      type: string
                    version:
                      description: Version is the kubernetes version
                      type: string
                  required:
                  - comparison
                  - version
                  type: object
                type: array
            required:
            - classifierLabels
            type: object
          status:
            description: ClassifierStatus defines the observed state of Classifier
            properties:
              clusterInfo:
                description: ClusterInfo reference all the cluster-api Cluster where
                  Classifier has been/is being deployed
                items:
                  properties:
                    cluster:
                      description: Cluster references the Cluster
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    failureMessage:
                      description: FailureMessage provides more information about
                        the error.
                      type: string
                    hash:
                      description: Hash represents the hash of the Classifier currently
                        deployed in the Cluster
                      format: byte
                      type: string
                    status:
                      description: Status represents the state of the feature in the
                        workload cluster
                      enum:
                      - Provisioning
                      - Provisioned
                      - Failed
                      - Removing
                      - Removed
                      type: string
                  required:
                  - cluster
                  - hash
                  type: object
                type: array
              machingClusterStatuses:
                description: MatchingClusterRefs reference all the cluster-api Cluster
                  currently matching Classifier
                items:
                  properties:
                    clusterRef:
                      description: ClusterRef references the matching Cluster
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    managedLabels:
                      description: ManagedLabels indicates the labels being managed
                        on the cluster by this Classifier instance
                      items:
                        type: string
                      type: array
                    unManagedLabels:
                      description: UnManagedLabel indicates the labels this Classifier
                        instance would like to manage but cannot because different
                        instance is already managing it
                      items:
                        properties:
                          failureMessage:
                            description: FailureMessage is a human consumable message
                              explaining the misconfiguration
                            type: string
                          key:
                            description: Key represents a label Classifier would like
                              to manage but cannot because currently managed by different
                              instance
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                  required:
                  - clusterRef
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: clusterhealthchecks.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: ClusterHealthCheck
    listKind: ClusterHealthCheckList
    plural: clusterhealthchecks
    singular: clusterhealthcheck
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterHealthCheck is the Schema for the clusterhealthchecks
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterHealthCheckSpec defines the desired state of ClusterHealthCheck
            properties:
              clusterSelector:
                description: ClusterSelector identifies clusters to associate to.
                type: string
              livenessChecks:
                description: LivenessChecks is a list of source of liveness checks
                  to evaluate. Anytime one of those changes, notifications will be
                  sent
                items:
                  properties:
                    livenessSourceRef:
                      description: LivenessSourceRef is a reference to a liveness-specific
                        resource that holds the details for the liveness check.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: Name of the liveness check. Must be a DNS_LABEL
                        and unique within the ClusterHealthCheck.
                      type: string
                    type:
                      description: Type specifies the type of liveness
                      enum:
                      - Addons
                      - HealthCheck
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
              notifications:
                description: Notification is a list of source of events to evaluate.
                items:
                  properties:
                    name:
                      description: Name of the notification check. Must be a DNS_LABEL
                        and unique within the ClusterHealthCheck.
                      type: string
                    notificationRef:
                      description: NotificationRef is a reference to a notification-specific
                        resource that holds the details for the notification.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type:
                      description: NotificationType specifies the type of notification
                      enum:
                      - KubernetesEvent
                      - Slack
                      - Webex
                      - Discord
                      - Teams
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
            required:
            - clusterSelector
            - livenessChecks
            - notifications
            type: object
          status:
            properties:
              clusterCondition:
                description: ClusterConditions contains conditions and notification
                  status for all clusters matching ClusterHealthCheck instance
                items:
                  properties:
                    clusterInfo:
                      properties:
                        cluster:
                          description: Cluster references the Cluster
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        failureMessage:
                          description: FailureMessage provides more information about
                            the error.
                          type: string
                        hash:
                          description: Hash represents the hash of the Classifier
                            currently deployed in the Cluster
                          format: byte
                          type: string
                        status:
                          description: Status represents the state of the feature
                            in the workload cluster
                          enum:
                          - Provisioning
                          - Provisioned
                          - Failed
                          - Removing
                          - Removed
                          type: string
                      required:
                      - cluster
                      - hash
                      type: object
                    conditions:
                      description: Cluster conditions.
                      items:
                        description: Condition defines an observation of a Cluster
                          API resource operational state.
                        properties:
                          lastTransitionTime:
                            description: Last time the condition transitioned from
                              one status to another. This should be when the underlying
                              condition changed. If that is not known, then using
                              the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: A human readable message indicating details
                              about the transition. This field may be empty.
                            type: string
                          name:
                            description: Condition name
                            type: string
                          reason:
                            description: The reason for the condition's last transition
                              in CamelCase. The specific API may choose whether or
                              not this field is considered a guaranteed API. This
                              field may not be empty.
                            type: string
                          severity:
                            description: Severity provides an explicit classification
                              of Reason code, so the users or machines can immediately
                              understand the current situation and act accordingly.
                              The Severity field MUST be set only when Status=False.
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            type: string
                          type:
                            description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                            type: string
                        required:
                        - lastTransitionTime
                        - name
                        - status
                        - type
                        type: object
                      type: array
                    notificationSummaries:
                      description: NotificationSummaries contains status information
                        on notifications
                      items:
                        properties:
                          failureMessage:
                            description: FailureMessage is a human consumable message
                              explaining the misconfiguration
                            type: string
                          name:
                            description: Name of the notification check.
                            type: string
                          status:
                            description: NotificationStatus specifies the notification
                              status
                            enum:
                            - Delivered
                            - FailedToDeliver
                            type: string
                        required:
                        - name
                        - status
                        type: object
                      type: array
                  required:
                  - clusterInfo
                  type: object
                type: array
              matchingClusters:
                description: MatchingClusterRefs reference all the clusters currently
                  matching ClusterHealthCheck ClusterSelector
                items:
                  description: "ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, \"must refer only to types A and B\" or \"UID not honored\"
                    or \"name must be restricted\". Those cannot be well described
                    when embedded. 3. Inconsistent validation.  Because the usages
                    are different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don't make new APIs embed an underspecified
                    API type they do not control. \n Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    ."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: debuggingconfigurations.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: DebuggingConfiguration
    listKind: DebuggingConfigurationList
    plural: debuggingconfigurations
    singular: debuggingconfiguration
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DebuggingConfiguration is the Schema for the debuggingconfigurations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DebuggingConfigurationSpec defines the desired state of DebuggingConfiguration
            properties:
              configuration:
                description: Configuration contains debugging configuration as granular
                  as per component.
                items:
                  description: ComponentConfiguration is the debugging configuration
                    to be applied to a Sveltos component.
                  properties:
                    component:
                      description: Component indicates which Sveltos component the
                        configuration applies to.
                      enum:
                      - AddonManager
                      - Classifier
                      - ClassifierAgent
                      - SveltosClusterManager
                      - DriftDetectionManager
                      - AccessManager
                      - HealthCheckManager
                      - EventManager
                      type: string
                    logLevel:
                      description: 'LogLevel is the log severity above which logs
                        are sent to the stdout. [Default: Info]'
                      enum:
                      - LogLevelNotSet
                      - LogLevelInfo
                      - LogLevelDebug
                      - LogLevelVerbose
                      type: string
                  required:
                  - component
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: eventreports.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: EventReport
    listKind: EventReportList
    plural: eventreports
    singular: eventreport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EventReport is the Schema for the EventReport API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              clusterName:
                description: ClusterName is the name of the Cluster this EventReport
                  is for.
                type: string
              clusterNamespace:
                description: ClusterNamespace is the namespace of the Cluster this
                  EventReport is for.
                type: string
              clusterType:
                description: ClusterType is the type of Cluster this EventReport is
                  for.
                type: string
              eventSourceName:
                description: EventSourceName is the name of the EventSource instance
                  this report is for.
                type: string
              matchingResources:
                description: MatchingResources contains a list of resources matching
                  an event
                items:
                  description: "ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, \"must refer only to types A and B\" or \"UID not honored\"
                    or \"name must be restricted\". Those cannot be well described
                    when embedded. 3. Inconsistent validation.  Because the usages
                    are different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don't make new APIs embed an underspecified
                    API type they do not control. \n Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    ."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              resources:
                description: If EventSource Spec.CollectResources is set to true,
                  all matching resources will be collected and contained in the Resources
                  field.
                format: byte
                type: string
            required:
            - clusterName
            - clusterNamespace
            - clusterType
            - eventSourceName
            type: object
          status:
            description: EventReportStatus defines the observed state of EventReport
            properties:
              phase:
                description: Phase represents the current phase of report.
                enum:
                - WaitingForDelivery
                - Delivering
                - Processed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: eventsources.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: EventSource
    listKind: EventSourceList
    plural: eventsources
    singular: eventsource
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EventSource is the Schema for the EventSource API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EventSourceSpec defines the desired state of EventSource
            properties:
              aggregatedSelection:
                description: 'This field is optional and can be used to specify a
                  Lua function that will be used to further select a subset of the
                  resources that have already been selected using the ResourceSelector
                  field. The function will receive the array of resources selected
                  by ResourceSelectors. If this field is not specified, all resources
                  selected by the ResourceSelector field will be considered. This
                  field allows to perform more complex filtering or selection operations
                  on the resources, looking at all resources together. This can be
                  useful for more sophisticated tasks, such as identifying resources
                  that are related to each other or that have similar properties.
                  The Lua function must return a struct with: - "resources" field:
                  slice of matching resorces; - "message" field: (optional) message.'
                type: string
              collectResources:
                default: false
                description: CollectResources indicates whether matching resources
                  need to be collected and added to EventReport.
                type: boolean
              resourceSelectors:
                description: ResourceSelectors identifies what resources to select
                items:
                  description: ResourceSelector defines what resources are a match
                  properties:
                    evaluate:
                      description: Evaluate contains a function "evaluate" in lua
                        language. The function will be passed one of the object selected
                        based on above criteria. Must return struct with field "matching"
                        representing whether object is a match and an optional "message"
                        field.
                      type: string
                    group:
                      description: Group of the resource deployed in the Cluster.
                      type: string
                    kind:
                      description: Kind of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    labelFilters:
                      description: LabelFilters allows to filter resources based on
                        current labels.
                      items:
                        properties:
                          key:
                            description: Key is the label key
                            type: string
                          operation:
                            description: Operation is the comparison operation
                            enum:
                            - Equal
                            - Different
                            type: string
                          value:
                            description: Value is the label value
                            type: string
                        required:
                        - key
                        - operation
                        - value
                        type: object
                      type: array
                    namespace:
                      description: Namespace of the resource deployed in the  Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    version:
                      description: Version of the resource deployed in the Cluster.
                      type: string
                  required:
                  - group
                  - kind
                  - version
                  type: object
                type: array
            required:
            - resourceSelectors
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: healthcheckreports.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: HealthCheckReport
    listKind: HealthCheckReportList
    plural: healthcheckreports
    singular: healthcheckreport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HealthCheckReport is the Schema for the HealthCheckReport API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              clusterName:
                description: ClusterName is the name of the Cluster this HealthCheckReport
                  is for.
                type: string
              clusterNamespace:
                description: ClusterNamespace is the namespace of the Cluster this
                  HealthCheckReport is for.
                type: string
              clusterType:
                description: ClusterType is the type of Cluster this HealthCheckReport
                  is for.
                type: string
              healthCheckName:
                description: HealthName is the name of the HealthCheck instance this
                  report is for.
                type: string
              resourceStatuses:
                description: ResourceStatuses contains a list of resources with their
                  status
                items:
                  properties:
                    healthStatus:
                      description: HealthStatus is the health status of the object
                      enum:
                      - Healthy
                      - Progressing
                      - Degraded
                      - Suspended
                      type: string
                    message:
                      description: Message is an extra message for human consumption
                      type: string
                    objectRef:
                      description: ObjectRef for which status is reported
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    resource:
                      description: If HealthCheck Spec.CollectResources is set to
                        true, resource will be collected and contained in the Resource
                        field.
                      format: byte
                      type: string
                  required:
                  - healthStatus
                  - objectRef
                  type: object
                type: array
            required:
            - clusterName
            - clusterNamespace
            - clusterType
            - healthCheckName
            type: object
          status:
            description: HealthCheckReportStatus defines the observed state of HealthCheckReport
            properties:
              phase:
                description: Phase represents the current phase of report.
                enum:
                - WaitingForDelivery
                - Delivering
                - Processed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: healthchecks.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: HealthCheck
    listKind: HealthCheckList
    plural: healthchecks
    singular: healthcheck
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HealthCheck is the Schema for the HealthCheck API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HealthCheckSpec defines the desired state of HealthCheck
            properties:
              collectResources:
                default: false
                description: CollectResources indicates whether matching resources
                  need to be collected and added to HealthReport.
                type: boolean
              evaluateHealth:
                description: 'The EvaluateHealth field specifies a Lua function responsible
                  for evaluating the health of the resources selected by resourceSelectors.
                  This function can assess the health of each resource independently
                  or consider inter-resource relationships. The function must be named
                  *evaluate* and can access all objects identified by resourceSelectors
                  using the *resources* variable. It should return an array of structured
                  instances, each containing the following fields: - resource: The
                  resource being evaluated - healthStatus: The health status of the
                  resource, which can be one of "Healthy", "Progressing", "Degraded",
                  or "Suspended" - message: An optional message providing additional
                  information about the health status'
                minLength: 1
                type: string
              resourceSelectors:
                description: ResourceSelectors identifies what resources to select
                  to evaluate health
                items:
                  description: ResourceSelector defines what resources are a match
                  properties:
                    evaluate:
                      description: Evaluate contains a function "evaluate" in lua
                        language. The function will be passed one of the object selected
                        based on above criteria. Must return struct with field "matching"
                        representing whether object is a match and an optional "message"
                        field.
                      type: string
                    group:
                      description: Group of the resource deployed in the Cluster.
                      type: string
                    kind:
                      description: Kind of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    labelFilters:
                      description: LabelFilters allows to filter resources based on
                        current labels.
                      items:
                        properties:
                          key:
                            description: Key is the label key
                            type: string
                          operation:
                            description: Operation is the comparison operation
                            enum:
                            - Equal
                            - Different
                            type: string
                          value:
                            description: Value is the label value
                            type: string
                        required:
                        - key
                        - operation
                        - value
                        type: object
                      type: array
                    namespace:
                      description: Namespace of the resource deployed in the  Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    version:
                      description: Version of the resource deployed in the Cluster.
                      type: string
                  required:
                  - group
                  - kind
                  - version
                  type: object
                type: array
            required:
            - evaluateHealth
            - resourceSelectors
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: reloaderreports.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: ReloaderReport
    listKind: ReloaderReportList
    plural: reloaderreports
    singular: reloaderreport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ReloaderReport is the Schema for the ReloaderReport API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              clusterName:
                description: ClusterName is the name of the Cluster this ReloaderReport
                  is for.
                type: string
              clusterNamespace:
                description: ClusterNamespace is the namespace of the Cluster this
                  ReloaderReport is for.
                type: string
              clusterType:
                description: ClusterType is the type of Cluster this ReloaderReport
                  is for.
                type: string
              resourcesToReload:
                description: ResourcesToReload contains a list of resources that requires
                  rolling upgrade
                items:
                  description: ReloaderInfo represents a resource that need to be
                    reloaded if any mounted ConfigMap/Secret changes.
                  properties:
                    kind:
                      description: 'Kind of the resource. Supported kinds are: Deployment
                        StatefulSet DaemonSet.'
                      enum:
                      - Deployment
                      - StatefulSet
                      - DaemonSet
                      type: string
                    name:
                      description: Name of the referenced resource.
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace of the referenced resource.
                      minLength: 1
                      type: string
                    value:
                      type: string
                  required:
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
            required:
            - clusterName
            - clusterNamespace
            - clusterType
            type: object
          status:
            description: ReloaderReportStatus defines the observed state of ReloaderReport
            properties:
              phase:
                description: Phase represents the current phase of report.
                enum:
                - WaitingForDelivery
                - Delivering
                - Processed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: reloaders.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: Reloader
    listKind: ReloaderList
    plural: reloaders
    singular: reloader
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Reloader is the Schema for the Reloader API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ReloaderSpec defines the desired state of Reloader
            properties:
              reloaderInfo:
                items:
                  description: ReloaderInfo represents a resource that need to be
                    reloaded if any mounted ConfigMap/Secret changes.
                  properties:
                    kind:
                      description: 'Kind of the resource. Supported kinds are: Deployment
                        StatefulSet DaemonSet.'
                      enum:
                      - Deployment
                      - StatefulSet
                      - DaemonSet
                      type: string
                    name:
                      description: Name of the referenced resource.
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace of the referenced resource.
                      minLength: 1
                      type: string
                    value:
                      type: string
                  required:
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: resourcesummaries.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: ResourceSummary
    listKind: ResourceSummaryList
    plural: resourcesummaries
    singular: resourcesummary
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ResourceSummary is the Schema for the ResourceSummary API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ResourceSummarySpec defines the desired state of ResourceSummary
            properties:
              chartResources:
                description: Resources deployed by ClusterSummary because of referenced
                  Helm charts
                items:
                  properties:
                    chartName:
                      description: ChartName is the chart name
                      minLength: 1
                      type: string
                    group:
                      description: Resources deployed by ClusterSummary because of
                        helm charts
                      items:
                        properties:
                          group:
                            description: Group of the resource deployed in the Cluster.
                            type: string
                          kind:
                            description: Kind of the resource deployed in the Cluster.
                            minLength: 1
                            type: string
                          name:
                            description: Name of the resource deployed in the Cluster.
                            minLength: 1
                            type: string
                          namespace:
                            description: Namespace of the resource deployed in the
                              Cluster. Empty for resources scoped at cluster level.
                            type: string
                          version:
                            description: Version of the resource deployed in the Cluster.
                            type: string
                        required:
                        - group
                        - kind
                        - name
                        - version
                        type: object
                      type: array
                    releaseName:
                      description: ReleaseName is the chart release
                      minLength: 1
                      type: string
                    releaseNamespace:
                      description: ReleaseNamespace is the namespace release will
                        be installed
                      minLength: 1
                      type: string
                  required:
                  - chartName
                  - releaseName
                  - releaseNamespace
                  type: object
                type: array
              kustomizeResources:
                description: KustomizeResources deployed by ClusterSummary because
                  of referenced KustomizationRef
                items:
                  properties:
                    group:
                      description: Group of the resource deployed in the Cluster.
                      type: string
                    kind:
                      description: Kind of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    name:
                      description: Name of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace of the resource deployed in the Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    version:
                      description: Version of the resource deployed in the Cluster.
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  - version
                  type: object
                type: array
              resources:
                description: Resources deployed by ClusterSummary because of referenced
                  ConfigMaps/Secrets
                items:
                  properties:
                    group:
                      description: Group of the resource deployed in the Cluster.
                      type: string
                    kind:
                      description: Kind of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    name:
                      description: Name of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace of the resource deployed in the Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    version:
                      description: Version of the resource deployed in the Cluster.
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  - version
                  type: object
                type: array
            type: object
          status:
            description: ResourceSummaryStatus defines the status of ResourceSummary
            properties:
              helmResourceHashes:
                description: HelmResourceHashes specifies list of resource plus hash.
                items:
                  properties:
                    group:
                      description: Group of the resource deployed in the Cluster.
                      type: string
                    hash:
                      description: Hash is the hash of a resource's data.
                      type: string
                    kind:
                      description: Kind of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    name:
                      description: Name of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace of the resource deployed in the Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    version:
                      description: Version of the resource deployed in the Cluster.
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  - version
                  type: object
                type: array
              helmResourcesChanged:
                description: Helm Resources changed.
                type: boolean
              kustomizeResourceHashes:
                description: KustomizeResourceHashes specifies a list of resource
                  plus hash
                items:
                  properties:
                    group:
                      description: Group of the resource deployed in the Cluster.
                      type: string
                    hash:
                      description: Hash is the hash of a resource's data.
                      type: string
                    kind:
                      description: Kind of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    name:
                      description: Name of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace of the resource deployed in the Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    version:
                      description: Version of the resource deployed in the Cluster.
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  - version
                  type: object
                type: array
              kustomizeResourcesChanged:
                description: KustomizeResources changed.
                type: boolean
              resourceHashes:
                description: ResourceHashes specifies a list of resource plus hash
                items:
                  properties:
                    group:
                      description: Group of the resource deployed in the Cluster.
                      type: string
                    hash:
                      description: Hash is the hash of a resource's data.
                      type: string
                    kind:
                      description: Kind of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    name:
                      description: Name of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace of the resource deployed in the Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    version:
                      description: Version of the resource deployed in the Cluster.
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  - version
                  type: object
                type: array
              resourcesChanged:
                description: Resources changed.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: rolerequests.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: RoleRequest
    listKind: RoleRequestList
    plural: rolerequests
    singular: rolerequest
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RoleRequest is the Schema for the rolerequest API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RoleRequestSpec defines the desired state of RoleRequest
            properties:
              clusterSelector:
                description: ClusterSelector identifies clusters where permissions
                  requestes in this instance will be granted
                type: string
              expirationSeconds:
                description: ExpirationSeconds is the requested duration of validity
                  of the TokenRequest associated to ServiceAccount. If not specified,
                  default value is used
                format: int64
                type: integer
              roleRefs:
                description: RoleRefs references all the Secret/ConfigMaps containing
                  kubernetes Roles/ClusterRoles that need to be deployed in the matching
                  clusters.
                items:
                  description: PolicyRef specifies a resource containing one or more
                    policy to deploy in matching Clusters.
                  properties:
                    kind:
                      description: 'Kind of the resource. Supported kinds are: Secrets
                        and ConfigMaps.'
                      enum:
                      - Secret
                      - ConfigMap
                      type: string
                    name:
                      description: Name of the referenced resource.
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace of the referenced resource. Namespace
                        can be left empty. In such a case, namespace will be implicit
                        set to cluster's namespace.
                      type: string
                  required:
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
              serviceAccountName:
                description: ServiceAccountName is the name of the ServiceAccount
                  representing a tenant admin for which those permissions are requested
                type: string
              serviceAccountNamespace:
                description: ServiceAccountNamespace is the name of the ServiceAccount
                  representing a tenant admin for which those permissions are requested
                type: string
            required:
            - clusterSelector
            - serviceAccountName
            - serviceAccountNamespace
            type: object
          status:
            description: RoleRequestStatus defines the status of RoleRequest
            properties:
              clusterInfo:
                description: ClusterInfo represents the hash of the ClusterRoles/Roles
                  deployed in a matching cluster for the admin.
                items:
                  properties:
                    cluster:
                      description: Cluster references the Cluster
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    failureMessage:
                      description: FailureMessage provides more information about
                        the error.
                      type: string
                    hash:
                      description: Hash represents the hash of the Classifier currently
                        deployed in the Cluster
                      format: byte
                      type: string
                    status:
                      description: Status represents the state of the feature in the
                        workload cluster
                      enum:
                      - Provisioning
                      - Provisioned
                      - Failed
                      - Removing
                      - Removed
                      type: string
                  required:
                  - cluster
                  - hash
                  type: object
                type: array
              failureMessage:
                description: FailureMessage provides more information if an error
                  occurs.
                type: string
              matchingClusters:
                description: MatchingClusterRefs reference all the cluster currently
                  matching RoleRequest ClusterSelector
                items:
                  description: "ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, \"must refer only to types A and B\" or \"UID not honored\"
                    or \"name must be restricted\". Those cannot be well described
                    when embedded. 3. Inconsistent validation.  Because the usages
                    are different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don't make new APIs embed an underspecified
                    API type they do not control. \n Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    ."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: sveltosclusters.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: SveltosCluster
    listKind: SveltosClusterList
    plural: sveltosclusters
    singular: sveltoscluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Indicates whether cluster is ready to be managed by sveltos
      jsonPath: .status.ready
      name: Ready
      type: boolean
    - description: Kubernetes version associated with this Cluster
      jsonPath: .status.version
      name: Version
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SveltosCluster is the Schema for the SveltosCluster API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SveltosClusterSpec defines the desired state of SveltosCluster
            properties:
              kubeconfigName:
                description: "KubeconfigName allows overriding the default Sveltos
                  convention which expected a valid kubeconfig to be hosted in a secret
                  with the pattern ${sveltosClusterName}-sveltos-kubeconfig. \n When
                  a value is specified, the referenced Kubernetes Secret object must
                  exist, and will be used to connect to the Kubernetes cluster."
                type: string
              paused:
                description: Paused can be used to prevent controllers from processing
                  the SveltosCluster and all its associated objects.
                type: boolean
            type: object
          status:
            description: SveltosClusterStatus defines the status of SveltosCluster
            properties:
              failureMessage:
                description: FailureMessage is a human consumable message explaining
                  the misconfiguration
                type: string
              ready:
                description: Ready is the state of the cluster.
                type: boolean
              version:
                description: The Kubernetes version of the cluster.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  name: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: addon-controller-role-dtm-in-mgmt-cluster
  namespace: projectsveltos
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: addon-controller-rolebinging-dtm-in-mgmt-cluster
  namespace: projectsveltos
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: addon-controller-role-dtm-in-mgmt-cluster
subjects:
- kind: ServiceAccount
  name: addon-controller
  namespace: projectsveltos
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: clusterconfigurations.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: ClusterConfiguration
    listKind: ClusterConfigurationList
    plural: clusterconfigurations
    singular: clusterconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterConfiguration is the Schema for the clusterconfigurations
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          status:
            description: ClusterConfigurationStatus defines the observed state of
              ClusterConfiguration
            properties:
              clusterProfileResources:
                description: |-
                  ClusterProfileResources is the list of resources currently deployed in a Cluster due
                  to ClusterProfiles
                items:
                  description: |-
                    ClusterProfileResource keeps info on all of the resources deployed in this Cluster
                    due to a given ClusterProfile
                  properties:
                    Features:
                      description: |-
                        Features contains the list of policies deployed in the Cluster because
                        of a given feature
                      items:
                        properties:
                          charts:
                            description: Charts is a list of helm charts deployed
                              in the Cluster.
                            items:
                              properties:
                                appVersion:
                                  description: AppVersion is the version of the app
                                    deployed in the Cluster.
                                  type: string
                                chartVersion:
                                  description: ChartVersion is the version of the
                                    helm chart deployed in the Cluster.
                                  type: string
                                lastAppliedTime:
                                  description: LastAppliedTime identifies when this
                                    resource was last applied to the cluster.
                                  format: date-time
                                  type: string
                                namespace:
                                  description: Namespace where chart is deployed in
                                    the Cluster.
                                  type: string
                                releaseName:
                                  description: ReleaseName name of the release deployed
                                    in the Cluster.
                                  minLength: 1
                                  type: string
                                repoURL:
                                  description: |-
                                    RepoURL URL of the repo containing the helm chart deployed
                                    in the Cluster.
                                  minLength: 1
                                  type: string
                              required:
                              - chartVersion
                              - lastAppliedTime
                              - releaseName
                              - repoURL
                              type: object
                            type: array
                          featureID:
                            description: FeatureID is an indentifier of the feature
                              whose status is reported
                            enum:
                            - Resources
                            - Helm
                            - Kustomize
                            type: string
                          resources:
                            description: Resources is a list of resources deployed
                              in the Cluster.
                            items:
                              properties:
                                group:
                                  description: Group of the resource deployed in the
                                    Cluster.
                                  type: string
                                kind:
                                  description: Kind of the resource deployed in the
                                    Cluster.
                                  minLength: 1
                                  type: string
                                lastAppliedTime:
                                  description: LastAppliedTime identifies when this
                                    resource was last applied to the cluster.
                                  format: date-time
                                  type: string
                                name:
                                  description: Name of the resource deployed in the
                                    Cluster.
                                  minLength: 1
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace of the resource deployed in the Cluster.
                                    Empty for resources scoped at cluster level.
                                  type: string
                                owner:
                                  description: Owner is the list of ConfigMap/Secret
                                    containing this resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: |-
                                        If referring to a piece of an object instead of an entire object, this string
                                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a container within a pod, this would take on a value like:
                                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                        the event) or if no container name is specified "spec.containers[2]" (container with
                                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                        referencing a part of an object.
                                        TODO: this design is not final and this field is subject to change in the future.
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the referent.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                      type: string
                                    resourceVersion:
                                      description: |-
                                        Specific resourceVersion to which this reference is made, if any.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                      type: string
                                    uid:
                                      description: |-
                                        UID of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                version:
                                  description: Version of the resource deployed in
                                    the Cluster.
                                  minLength: 1
                                  type: string
                              required:
                              - group
                              - kind
                              - name
                              - owner
                              - version
                              type: object
                            type: array
                        required:
                        - featureID
                        type: object
                      type: array
                    clusterProfileName:
                      description: ProfileName is the name of the ClusterProfile matching
                        the Cluster.
                      type: string
                  required:
                  - clusterProfileName
                  type: object
                type: array
              profileResources:
                description: |-
                  ProfileResources is the list of resources currently deployed in a Cluster due
                  to Profiles
                items:
                  description: |-
                    ProfileResource keeps info on all of the resources deployed in this Cluster
                    due to a given Profile
                  properties:
                    Features:
                      description: |-
                        Features contains the list of policies deployed in the Cluster because
                        of a given feature
                      items:
                        properties:
                          charts:
                            description: Charts is a list of helm charts deployed
                              in the Cluster.
                            items:
                              properties:
                                appVersion:
                                  description: AppVersion is the version of the app
                                    deployed in the Cluster.
                                  type: string
                                chartVersion:
                                  description: ChartVersion is the version of the
                                    helm chart deployed in the Cluster.
                                  type: string
                                lastAppliedTime:
                                  description: LastAppliedTime identifies when this
                                    resource was last applied to the cluster.
                                  format: date-time
                                  type: string
                                namespace:
                                  description: Namespace where chart is deployed in
                                    the Cluster.
                                  type: string
                                releaseName:
                                  description: ReleaseName name of the release deployed
                                    in the Cluster.
                                  minLength: 1
                                  type: string
                                repoURL:
                                  description: |-
                                    RepoURL URL of the repo containing the helm chart deployed
                                    in the Cluster.
                                  minLength: 1
                                  type: string
                              required:
                              - chartVersion
                              - lastAppliedTime
                              - releaseName
                              - repoURL
                              type: object
                            type: array
                          featureID:
                            description: FeatureID is an indentifier of the feature
                              whose status is reported
                            enum:
                            - Resources
                            - Helm
                            - Kustomize
                            type: string
                          resources:
                            description: Resources is a list of resources deployed
                              in the Cluster.
                            items:
                              properties:
                                group:
                                  description: Group of the resource deployed in the
                                    Cluster.
                                  type: string
                                kind:
                                  description: Kind of the resource deployed in the
                                    Cluster.
                                  minLength: 1
                                  type: string
                                lastAppliedTime:
                                  description: LastAppliedTime identifies when this
                                    resource was last applied to the cluster.
                                  format: date-time
                                  type: string
                                name:
                                  description: Name of the resource deployed in the
                                    Cluster.
                                  minLength: 1
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace of the resource deployed in the Cluster.
                                    Empty for resources scoped at cluster level.
                                  type: string
                                owner:
                                  description: Owner is the list of ConfigMap/Secret
                                    containing this resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: |-
                                        If referring to a piece of an object instead of an entire object, this string
                                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a container within a pod, this would take on a value like:
                                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                        the event) or if no container name is specified "spec.containers[2]" (container with
                                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                        referencing a part of an object.
                                        TODO: this design is not final and this field is subject to change in the future.
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the referent.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                      type: string
                                    resourceVersion:
                                      description: |-
                                        Specific resourceVersion to which this reference is made, if any.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                      type: string
                                    uid:
                                      description: |-
                                        UID of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                version:
                                  description: Version of the resource deployed in
                                    the Cluster.
                                  minLength: 1
                                  type: string
                              required:
                              - group
                              - kind
                              - name
                              - owner
                              - version
                              type: object
                            type: array
                        required:
                        - featureID
                        type: object
                      type: array
                    profileName:
                      description: ProfileName is the name of the Profile matching
                        the Cluster.
                      type: string
                  required:
                  - profileName
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: clusterprofiles.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: ClusterProfile
    listKind: ClusterProfileList
    plural: clusterprofiles
    singular: clusterprofile
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterProfile is the Schema for the clusterprofiles API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              clusterRefs:
                description: ClusterRefs identifies clusters to associate to.
                items:
                  description: |-
                    ObjectReference contains enough information to let you inspect or modify the referred object.
                    ---
                    New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                     1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                     2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                        restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                        Those cannot be well described when embedded.
                     3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                     4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                        during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                        and the version of the actual struct is irrelevant.
                     5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.

                    Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                    For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              clusterSelector:
                description: ClusterSelector identifies clusters to associate to.
                type: string
              dependsOn:
                description: |-
                  DependsOn specifies a list of other ClusterProfiles that this instance depends on.
                  In any managed cluster that matches this ClusterProfile, the add-ons and applications
                  defined in this instance will not be deployed until all add-ons and applications in the
                  ClusterProfiles listed as dependencies are deployed.
                items:
                  type: string
                type: array
              extraAnnotations:
                additionalProperties:
                  type: string
                description: |-
                  ExtraAnnotations: These annotations will be added by Sveltos to all Kubernetes resources
                  deployed in a managed cluster based on this ClusterProfile/Profile instance.
                  **Important:** If a resource deployed by Sveltos already has a annotation with a key present in
                  `ExtraAnnotations`, the value from `ExtraAnnotations` will override the existing value.
                type: object
              extraLabels:
                additionalProperties:
                  type: string
                description: |-
                  ExtraLabels: These labels will be added by Sveltos to all Kubernetes resources deployed in
                  a managed cluster based on this ClusterProfile/Profile instance.
                  **Important:** If a resource deployed by Sveltos already has a label with a key present in
                  `ExtraLabels`, the value from `ExtraLabels` will override the existing value.
                type: object
              helmCharts:
                description: Helm charts is a list of helm charts that need to be
                  deployed
                items:
                  properties:
                    chartName:
                      description: ChartName is the chart name
                      minLength: 1
                      type: string
                    chartVersion:
                      description: ChartVersion is the chart version
                      minLength: 1
                      type: string
                    helmChartAction:
                      default: Install
                      description: HelmChartAction is the action that will be taken
                        on the helm chart
                      enum:
                      - Install
                      - Uninstall
                      type: string
                    options:
                      description: Options allows to set flags which are used during
                        installation.
                      properties:
                        atomic:
                          default: false
                          description: |-
                            if set, the installation process deletes the installation on failure.
                            The --wait flag will be set automatically if --atomic is used
                            Default to false
                          type: boolean
                        createNamespace:
                          default: true
                          description: Create the release namespace if not present.
                            Defaults to true
                          type: boolean
                        dependencyUpdate:
                          default: false
                          description: |-
                            update dependencies if they are missing before installing the chart
                            Default to false
                          type: boolean
                        disableHooks:
                          default: false
                          description: |-
                            prevent hooks from running during install
                            Default to false
                          type: boolean
                        disableOpenAPIValidation:
                          default: false
                          description: |-
                            if set, the installation process will not validate rendered templates against the Kubernetes OpenAPI Schema
                            Default to false
                          type: boolean
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels that would be added to release metadata.
                          type: object
                        skipCRDs:
                          default: false
                          description: |-
                            SkipCRDs controls whether CRDs should be installed during install/upgrade operation.
                            By default, CRDs are installed if not already present.
                          type: boolean
                        timeout:
                          description: time to wait for any individual Kubernetes
                            operation (like Jobs for hooks) (default 5m0s)
                          type: string
                        wait:
                          default: false
                          description: |-
                            if set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet
                            are in a ready state before marking the release as successful. It will wait for as long as --timeout
                            Default to false
                          type: boolean
                        waitForJobs:
                          default: false
                          description: |-
                            if set and --wait enabled, will wait until all Jobs have been completed before marking the release as successful.
                            It will wait for as long as --timeout
                            Default to false
                          type: boolean
                      type: object
                    releaseName:
                      description: ReleaseName is the chart release
                      minLength: 1
                      type: string
                    releaseNamespace:
                      description: ReleaseNamespace is the namespace release will
                        be installed
                      minLength: 1
                      type: string
                    repositoryName:
                      description: RepositoryName is the name helm chart repository
                      minLength: 1
                      type: string
                    repositoryURL:
                      description: RepositoryURL is the URL helm chart repository
                      minLength: 1
                      type: string
                    values:
                      description: |-
                        Values holds the values for this Helm release.
                        Go templating with the values from the referenced CAPI Cluster.
                        Currently following can be referenced:
                        - Cluster => CAPI Cluster for instance
                        - KubeadmControlPlane => the CAPI Cluster controlPlaneRef
                        - InfrastructureProvider => the CAPI cluster infrastructure provider
                        - SecretRef => store any confindetial information in a Secret, set SecretRef then reference it
                      type: string
                  required:
                  - chartName
                  - chartVersion
                  - releaseName
                  - releaseNamespace
                  - repositoryName
                  - repositoryURL
                  type: object
                type: array
              kustomizationRefs:
                description: |-
                  Kustomization refs is a list of kustomization paths. Kustomization will
                  be run on those paths and the outcome will be deployed.
                items:
                  properties:
                    deploymentType:
                      default: Remote
                      description: |-
                        DeploymentType indicates whether resources need to be deployed
                        into the management cluster (local) or the managed cluster (remote)
                      enum:
                      - Local
                      - Remote
                      type: string
                    kind:
                      description: |-
                        Kind of the resource. Supported kinds are:
                        - flux GitRepository;OCIRepository;Bucket
                        - ConfigMap/Secret
                      enum:
                      - GitRepository
                      - OCIRepository
                      - Bucket
                      - ConfigMap
                      - Secret
                      type: string
                    name:
                      description: Name of the referenced resource.
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced resource.
                        For ClusterProfile namespace can be left empty. In such a case, namespace will
                        be implicit set to cluster's namespace.
                        For Profile namespace must be left empty. The Profile namespace will be used.
                      type: string
                    path:
                      description: |-
                        Path to the directory containing the kustomization.yaml file, or the
                        set of plain YAMLs a kustomization.yaml should be generated for.
                        Defaults to 'None', which translates to the root path of the SourceRef.
                      type: string
                    targetNamespace:
                      description: |-
                        TargetNamespace sets or overrides the namespace in the
                        kustomization.yaml file.
                      maxLength: 63
                      minLength: 1
                      type: string
                  required:
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
              maxUpdate:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  The maximum number of clusters that can be updated concurrently.
                  Value can be an absolute number (ex: 5) or a percentage of desired cluster (ex: 10%).
                  Defaults to 100%.
                  Example: when this is set to 30%, when list of add-ons/applications in ClusterProfile
                  changes, only 30% of matching clusters will be updated in parallel. Only when updates
                  in those cluster succeed, other matching clusters are updated.
                pattern: ^((100|[0-9]{1,2})%|[0-9]+)$
                x-kubernetes-int-or-string: true
              policyRefs:
                description: |-
                  PolicyRefs references all the ConfigMaps/Secrets containing kubernetes resources
                  that need to be deployed in the matching CAPI clusters.
                items:
                  properties:
                    deploymentType:
                      default: Remote
                      description: |-
                        DeploymentType indicates whether resources need to be deployed
                        into the management cluster (local) or the managed cluster (remote)
                      enum:
                      - Local
                      - Remote
                      type: string
                    kind:
                      description: |-
                        Kind of the resource. Supported kinds are:
                        - ConfigMap/Secret
                        - flux GitRepository;OCIRepository;Bucket
                      enum:
                      - GitRepository
                      - OCIRepository
                      - Bucket
                      - ConfigMap
                      - Secret
                      type: string
                    name:
                      description: Name of the referenced resource.
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced resource.
                        For ClusterProfile namespace can be left empty. In such a case, namespace will
                        be implicit set to cluster's namespace.
                        For Profile namespace must be left empty. Profile namespace will be used.
                      type: string
                    path:
                      description: |-
                        Path to the directory containing the YAML files.
                        Defaults to 'None', which translates to the root path of the SourceRef.
                        Used only for GitRepository;OCIRepository;Bucket
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
              reloader:
                default: false
                description: |-
                  Reloader indicates whether Deployment/StatefulSet/DaemonSet instances deployed
                  by Sveltos and part of this ClusterProfile need to be restarted via rolling upgrade
                  when a ConfigMap/Secret instance mounted as volume is modified.
                  When set to true, when any mounted ConfigMap/Secret is modified, Sveltos automatically
                  starts a rolling upgrade for Deployment/StatefulSet/DaemonSet instances mounting it.
                type: boolean
              stopMatchingBehavior:
                default: WithdrawPolicies
                description: |-
                  StopMatchingBehavior indicates what behavior should be when a Cluster stop matching
                  the ClusterProfile. By default all deployed Helm charts and Kubernetes resources will
                  be withdrawn from Cluster. Setting StopMatchingBehavior to LeavePolicies will instead
                  leave ClusterProfile deployed policies in the Cluster.
                type: string
              syncMode:
                default: Continuous
                description: |-
                  SyncMode specifies how features are synced in a matching workload cluster.
                  - OneTime means, first time a workload cluster matches the ClusterProfile,
                  features will be deployed in such cluster. Any subsequent feature configuration
                  change won't be applied into the matching workload clusters;
                  - Continuous means first time a workload cluster matches the ClusterProfile,
                  features will be deployed in such a cluster. Any subsequent feature configuration
                  change will be applied into the matching workload clusters.
                  - DryRun means no change will be propagated to any matching cluster. A report
                  instead will be generated summarizing what would happen in any matching cluster
                  because of the changes made to ClusterProfile while in DryRun mode.
                enum:
                - OneTime
                - Continuous
                - ContinuousWithDriftDetection
                - DryRun
                type: string
              templateResourceRefs:
                description: |-
                  TemplateResourceRefs is a list of resource to collect from the management cluster.
                  Those resources' values will be used to instantiate templates contained in referenced
                  PolicyRefs and Helm charts
                items:
                  properties:
                    identifier:
                      description: |-
                        Identifier is how the resource will be referred to in the
                        template
                      type: string
                    resource:
                      description: |-
                        Resource references a Kubernetes instance in the management
                        cluster to fetch and use during template instantiation.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                            TODO: this design is not final and this field is subject to change in the future.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - identifier
                  - resource
                  type: object
                type: array
              validateHealths:
                description: |-
                  ValidateHealths is a slice of Lua functions to run against
                  the managed cluster to validate the state of those add-ons/applications
                  is healthy
                items:
                  properties:
                    featureID:
                      description: |-
                        FeatureID is an indentifier of the feature (Helm/Kustomize/Resources)
                        This field indicates when to run this check.
                        For instance:
                        - if set to Helm this check will be run after all helm
                        charts specified in the ClusterProfile are deployed.
                        - if set to Resources this check will be run after the content
                        of all the ConfigMaps/Secrets referenced by ClusterProfile in the
                        PolicyRef sections is deployed
                      enum:
                      - Resources
                      - Helm
                      - Kustomize
                      type: string
                    group:
                      description: Group of the resource to fetch in the managed Cluster.
                      type: string
                    kind:
                      description: Kind of the resource to fetch in the managed Cluster.
                      minLength: 1
                      type: string
                    labelFilters:
                      description: LabelFilters allows to filter resources based on
                        current labels.
                      items:
                        properties:
                          key:
                            description: Key is the label key
                            type: string
                          operation:
                            description: Operation is the comparison operation
                            enum:
                            - Equal
                            - Different
                            type: string
                          value:
                            description: Value is the label value
                            type: string
                        required:
                        - key
                        - operation
                        - value
                        type: object
                      type: array
                    name:
                      description: Name is the name of this check
                      type: string
                    namespace:
                      description: |-
                        Namespace of the resource to fetch in the managed Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    script:
                      description: |-
                        Script is a text containing a lua script.
                        Must return struct with field "health"
                        representing whether object is a match (true or false)
                      type: string
                    version:
                      description: Version of the resource to fetch in the managed
                        Cluster.
                      type: string
                  required:
                  - featureID
                  - group
                  - kind
                  - name
                  - version
                  type: object
                type: array
            type: object
          status:
            description: Status defines the observed state of ClusterProfile/Profile
            properties:
              matchingClusters:
                description: |-
                  MatchingClusterRefs reference all the clusters currently matching
                  ClusterProfile ClusterSelector
                items:
                  description: |-
                    ObjectReference contains enough information to let you inspect or modify the referred object.
                    ---
                    New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                     1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                     2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                        restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                        Those cannot be well described when embedded.
                     3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                     4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                        during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                        and the version of the actual struct is irrelevant.
                     5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.

                    Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                    For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              updatedClusters:
                description: |-
                  UpdatedClusters contains information all the cluster currently matching
                  ClusterProfile ClusterSelector and already updated to latest ClusterProfile
                  Spec
                properties:
                  clusters:
                    description: |-
                      Clusters reference all the clusters currently matching
                      ClusterProfile ClusterSelector and already updated/being updated
                      to ClusterProfile Spec
                    items:
                      description: |-
                        ObjectReference contains enough information to let you inspect or modify the referred object.
                        ---
                        New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                         1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                         2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                            restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                            Those cannot be well described when embedded.
                         3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                         4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                            during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                            and the version of the actual struct is irrelevant.
                         5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                            will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.

                        Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                        For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                            TODO: this design is not final and this field is subject to change in the future.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  hash:
                    description: |-
                      Hash represents of a unique value for ClusterProfile Spec at
                      a fixed point in time
                    format: byte
                    type: string
                type: object
              updatingClusters:
                description: |-
                  UpdatingClusters reference all the cluster currently matching
                  ClusterProfile ClusterSelector and being updated
                properties:
                  clusters:
                    description: |-
                      Clusters reference all the clusters currently matching
                      ClusterProfile ClusterSelector and already updated/being updated
                      to ClusterProfile Spec
                    items:
                      description: |-
                        ObjectReference contains enough information to let you inspect or modify the referred object.
                        ---
                        New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                         1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                         2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                            restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                            Those cannot be well described when embedded.
                         3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                         4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                            during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                            and the version of the actual struct is irrelevant.
                         5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                            will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.

                        Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                        For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                            TODO: this design is not final and this field is subject to change in the future.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  hash:
                    description: |-
                      Hash represents of a unique value for ClusterProfile Spec at
                      a fixed point in time
                    format: byte
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: clusterreports.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: ClusterReport
    listKind: ClusterReportList
    plural: clusterreports
    singular: clusterreport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterReport is the Schema for the clusterreports API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterReportSpec defines the desired state of ClusterReport
            properties:
              clusterName:
                description: |-
                  ClusterName is the name of the CAPI Cluster this ClusterReport
                  is for.
                type: string
              clusterNamespace:
                description: |-
                  ClusterNamespace is the namespace of the CAPI Cluster this
                  ClusterReport is for.
                type: string
            required:
            - clusterName
            - clusterNamespace
            type: object
          status:
            description: ClusterReportStatus defines the observed state of ClusterReport
            properties:
              kustomizeResourceReports:
                description: |-
                  KustomizeResourceReports contains report on Kubernetes resources
                  deployed because of KustomizationRefs
                items:
                  properties:
                    action:
                      description: Action represent the type of operation on the Kubernetes
                        resource.
                      enum:
                      - No Action
                      - Create
                      - Update
                      - Delete
                      - Conflict
                      type: string
                    message:
                      description: |-
                        Message is for any message that needs to added to better
                        explain the action.
                      type: string
                    resource:
                      description: Resource contains information about Kubernetes
                        Resource
                      properties:
                        group:
                          description: Group of the resource deployed in the Cluster.
                          type: string
                        kind:
                          description: Kind of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                        lastAppliedTime:
                          description: LastAppliedTime identifies when this resource
                            was last applied to the cluster.
                          format: date-time
                          type: string
                        name:
                          description: Name of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace of the resource deployed in the Cluster.
                            Empty for resources scoped at cluster level.
                          type: string
                        owner:
                          description: Owner is the list of ConfigMap/Secret containing
                            this resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                                TODO: this design is not final and this field is subject to change in the future.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        version:
                          description: Version of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                      required:
                      - group
                      - kind
                      - name
                      - owner
                      - version
                      type: object
                  required:
                  - resource
                  type: object
                type: array
              releaseReports:
                description: ReleaseReports contains report on helm releases
                items:
                  properties:
                    action:
                      description: Action represent the type of operation on the Helm
                        Chart
                      enum:
                      - No Action
                      - Install
                      - Upgrade
                      - Delete
                      - Conflict
                      type: string
                    chartName:
                      description: ReleaseName of the release deployed in the CAPI
                        Cluster.
                      minLength: 1
                      type: string
                    chartVersion:
                      description: |-
                        ChartVersion is the version of the helm chart deployed
                        in the CAPI Cluster.
                      type: string
                    message:
                      description: |-
                        Message is for any message that needs to added to better
                        explain the action.
                      type: string
                    releaseNamespace:
                      description: Namespace where release is deployed in the CAPI
                        Cluster.
                      minLength: 1
                      type: string
                  required:
                  - chartName
                  - chartVersion
                  - releaseNamespace
                  type: object
                type: array
              resourceReports:
                description: |-
                  ResourceReports contains report on Kubernetes resources
                  deployed because of PolicyRefs
                items:
                  properties:
                    action:
                      description: Action represent the type of operation on the Kubernetes
                        resource.
                      enum:
                      - No Action
                      - Create
                      - Update
                      - Delete
                      - Conflict
                      type: string
                    message:
                      description: |-
                        Message is for any message that needs to added to better
                        explain the action.
                      type: string
                    resource:
                      description: Resource contains information about Kubernetes
                        Resource
                      properties:
                        group:
                          description: Group of the resource deployed in the Cluster.
                          type: string
                        kind:
                          description: Kind of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                        lastAppliedTime:
                          description: LastAppliedTime identifies when this resource
                            was last applied to the cluster.
                          format: date-time
                          type: string
                        name:
                          description: Name of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace of the resource deployed in the Cluster.
                            Empty for resources scoped at cluster level.
                          type: string
                        owner:
                          description: Owner is the list of ConfigMap/Secret containing
                            this resource.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                                TODO: this design is not final and this field is subject to change in the future.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        version:
                          description: Version of the resource deployed in the Cluster.
                          minLength: 1
                          type: string
                      required:
                      - group
                      - kind
                      - name
                      - owner
                      - version
                      type: object
                  required:
                  - resource
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: clustersummaries.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: ClusterSummary
    listKind: ClusterSummaryList
    plural: clustersummaries
    singular: clustersummary
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterSummary is the Schema for the clustersummaries API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSummarySpec defines the desired state of ClusterSummary
            properties:
              clusterName:
                description: ClusterName is the name of the workload Cluster this
                  ClusterSummary is for.
                type: string
              clusterNamespace:
                description: |-
                  ClusterNamespace is the namespace of the workload Cluster this
                  ClusterSummary is for.
                type: string
              clusterProfileSpec:
                description: |-
                  ClusterProfileSpec represent the configuration that will be applied to
                  the workload cluster.
                properties:
                  clusterRefs:
                    description: ClusterRefs identifies clusters to associate to.
                    items:
                      description: |-
                        ObjectReference contains enough information to let you inspect or modify the referred object.
                        ---
                        New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                         1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                         2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                            restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                            Those cannot be well described when embedded.
                         3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                         4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                            during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                            and the version of the actual struct is irrelevant.
                         5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                            will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.

                        Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                        For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                            TODO: this design is not final and this field is subject to change in the future.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  clusterSelector:
                    description: ClusterSelector identifies clusters to associate
                      to.
                    type: string
                  dependsOn:
                    description: |-
                      DependsOn specifies a list of other ClusterProfiles that this instance depends on.
                      In any managed cluster that matches this ClusterProfile, the add-ons and applications
                      defined in this instance will not be deployed until all add-ons and applications in the
                      ClusterProfiles listed as dependencies are deployed.
                    items:
                      type: string
                    type: array
                  extraAnnotations:
                    additionalProperties:
                      type: string
                    description: |-
                      ExtraAnnotations: These annotations will be added by Sveltos to all Kubernetes resources
                      deployed in a managed cluster based on this ClusterProfile/Profile instance.
                      **Important:** If a resource deployed by Sveltos already has a annotation with a key present in
                      `ExtraAnnotations`, the value from `ExtraAnnotations` will override the existing value.
                    type: object
                  extraLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      ExtraLabels: These labels will be added by Sveltos to all Kubernetes resources deployed in
                      a managed cluster based on this ClusterProfile/Profile instance.
                      **Important:** If a resource deployed by Sveltos already has a label with a key present in
                      `ExtraLabels`, the value from `ExtraLabels` will override the existing value.
                    type: object
                  helmCharts:
                    description: Helm charts is a list of helm charts that need to
                      be deployed
                    items:
                      properties:
                        chartName:
                          description: ChartName is the chart name
                          minLength: 1
                          type: string
                        chartVersion:
                          description: ChartVersion is the chart version
                          minLength: 1
                          type: string
                        helmChartAction:
                          default: Install
                          description: HelmChartAction is the action that will be
                            taken on the helm chart
                          enum:
                          - Install
                          - Uninstall
                          type: string
                        options:
                          description: Options allows to set flags which are used
                            during installation.
                          properties:
                            atomic:
                              default: false
                              description: |-
                                if set, the installation process deletes the installation on failure.
                                The --wait flag will be set automatically if --atomic is used
                                Default to false
                              type: boolean
                            createNamespace:
                              default: true
                              description: Create the release namespace if not present.
                                Defaults to true
                              type: boolean
                            dependencyUpdate:
                              default: false
                              description: |-
                                update dependencies if they are missing before installing the chart
                                Default to false
                              type: boolean
                            disableHooks:
                              default: false
                              description: |-
                                prevent hooks from running during install
                                Default to false
                              type: boolean
                            disableOpenAPIValidation:
                              default: false
                              description: |-
                                if set, the installation process will not validate rendered templates against the Kubernetes OpenAPI Schema
                                Default to false
                              type: boolean
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels that would be added to release metadata.
                              type: object
                            skipCRDs:
                              default: false
                              description: |-
                                SkipCRDs controls whether CRDs should be installed during install/upgrade operation.
                                By default, CRDs are installed if not already present.
                              type: boolean
                            timeout:
                              description: time to wait for any individual Kubernetes
                                operation (like Jobs for hooks) (default 5m0s)
                              type: string
                            wait:
                              default: false
                              description: |-
                                if set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet
                                are in a ready state before marking the release as successful. It will wait for as long as --timeout
                                Default to false
                              type: boolean
                            waitForJobs:
                              default: false
                              description: |-
                                if set and --wait enabled, will wait until all Jobs have been completed before marking the release as successful.
                                It will wait for as long as --timeout
                                Default to false
                              type: boolean
                          type: object
                        releaseName:
                          description: ReleaseName is the chart release
                          minLength: 1
                          type: string
                        releaseNamespace:
                          description: ReleaseNamespace is the namespace release will
                            be installed
                          minLength: 1
                          type: string
                        repositoryName:
                          description: RepositoryName is the name helm chart repository
                          minLength: 1
                          type: string
                        repositoryURL:
                          description: RepositoryURL is the URL helm chart repository
                          minLength: 1
                          type: string
                        values:
                          description: |-
                            Values holds the values for this Helm release.
                            Go templating with the values from the referenced CAPI Cluster.
                            Currently following can be referenced:
                            - Cluster => CAPI Cluster for instance
                            - KubeadmControlPlane => the CAPI Cluster controlPlaneRef
                            - InfrastructureProvider => the CAPI cluster infrastructure provider
                            - SecretRef => store any confindetial information in a Secret, set SecretRef then reference it
                          type: string
                      required:
                      - chartName
                      - chartVersion
                      - releaseName
                      - releaseNamespace
                      - repositoryName
                      - repositoryURL
                      type: object
                    type: array
                  kustomizationRefs:
                    description: |-
                      Kustomization refs is a list of kustomization paths. Kustomization will
                      be run on those paths and the outcome will be deployed.
                    items:
                      properties:
                        deploymentType:
                          default: Remote
                          description: |-
                            DeploymentType indicates whether resources need to be deployed
                            into the management cluster (local) or the managed cluster (remote)
                          enum:
                          - Local
                          - Remote
                          type: string
                        kind:
                          description: |-
                            Kind of the resource. Supported kinds are:
                            - flux GitRepository;OCIRepository;Bucket
                            - ConfigMap/Secret
                          enum:
                          - GitRepository
                          - OCIRepository
                          - Bucket
                          - ConfigMap
                          - Secret
                          type: string
                        name:
                          description: Name of the referenced resource.
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referenced resource.
                            For ClusterProfile namespace can be left empty. In such a case, namespace will
                            be implicit set to cluster's namespace.
                            For Profile namespace must be left empty. The Profile namespace will be used.
                          type: string
                        path:
                          description: |-
                            Path to the directory containing the kustomization.yaml file, or the
                            set of plain YAMLs a kustomization.yaml should be generated for.
                            Defaults to 'None', which translates to the root path of the SourceRef.
                          type: string
                        targetNamespace:
                          description: |-
                            TargetNamespace sets or overrides the namespace in the
                            kustomization.yaml file.
                          maxLength: 63
                          minLength: 1
                          type: string
                      required:
                      - kind
                      - name
                      - namespace
                      type: object
                    type: array
                  maxUpdate:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      The maximum number of clusters that can be updated concurrently.
                      Value can be an absolute number (ex: 5) or a percentage of desired cluster (ex: 10%).
                      Defaults to 100%.
                      Example: when this is set to 30%, when list of add-ons/applications in ClusterProfile
                      changes, only 30% of matching clusters will be updated in parallel. Only when updates
                      in those cluster succeed, other matching clusters are updated.
                    pattern: ^((100|[0-9]{1,2})%|[0-9]+)$
                    x-kubernetes-int-or-string: true
                  policyRefs:
                    description: |-
                      PolicyRefs references all the ConfigMaps/Secrets containing kubernetes resources
                      that need to be deployed in the matching CAPI clusters.
                    items:
                      properties:
                        deploymentType:
                          default: Remote
                          description: |-
                            DeploymentType indicates whether resources need to be deployed
                            into the management cluster (local) or the managed cluster (remote)
                          enum:
                          - Local
                          - Remote
                          type: string
                        kind:
                          description: |-
                            Kind of the resource. Supported kinds are:
                            - ConfigMap/Secret
                            - flux GitRepository;OCIRepository;Bucket
                          enum:
                          - GitRepository
                          - OCIRepository
                          - Bucket
                          - ConfigMap
                          - Secret
                          type: string
                        name:
                          description: Name of the referenced resource.
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referenced resource.
                            For ClusterProfile namespace can be left empty. In such a case, namespace will
                            be implicit set to cluster's namespace.
                            For Profile namespace must be left empty. Profile namespace will be used.
                          type: string
                        path:
                          description: |-
                            Path to the directory containing the YAML files.
                            Defaults to 'None', which translates to the root path of the SourceRef.
                            Used only for GitRepository;OCIRepository;Bucket
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                    type: array
                  reloader:
                    default: false
                    description: |-
                      Reloader indicates whether Deployment/StatefulSet/DaemonSet instances deployed
                      by Sveltos and part of this ClusterProfile need to be restarted via rolling upgrade
                      when a ConfigMap/Secret instance mounted as volume is modified.
                      When set to true, when any mounted ConfigMap/Secret is modified, Sveltos automatically
                      starts a rolling upgrade for Deployment/StatefulSet/DaemonSet instances mounting it.
                    type: boolean
                  stopMatchingBehavior:
                    default: WithdrawPolicies
                    description: |-
                      StopMatchingBehavior indicates what behavior should be when a Cluster stop matching
                      the ClusterProfile. By default all deployed Helm charts and Kubernetes resources will
                      be withdrawn from Cluster. Setting StopMatchingBehavior to LeavePolicies will instead
                      leave ClusterProfile deployed policies in the Cluster.
                    type: string
                  syncMode:
                    default: Continuous
                    description: |-
                      SyncMode specifies how features are synced in a matching workload cluster.
                      - OneTime means, first time a workload cluster matches the ClusterProfile,
                      features will be deployed in such cluster. Any subsequent feature configuration
                      change won't be applied into the matching workload clusters;
                      - Continuous means first time a workload cluster matches the ClusterProfile,
                      features will be deployed in such a cluster. Any subsequent feature configuration
                      change will be applied into the matching workload clusters.
                      - DryRun means no change will be propagated to any matching cluster. A report
                      instead will be generated summarizing what would happen in any matching cluster
                      because of the changes made to ClusterProfile while in DryRun mode.
                    enum:
                    - OneTime
                    - Continuous
                    - ContinuousWithDriftDetection
                    - DryRun
                    type: string
                  templateResourceRefs:
                    description: |-
                      TemplateResourceRefs is a list of resource to collect from the management cluster.
                      Those resources' values will be used to instantiate templates contained in referenced
                      PolicyRefs and Helm charts
                    items:
                      properties:
                        identifier:
                          description: |-
                            Identifier is how the resource will be referred to in the
                            template
                          type: string
                        resource:
                          description: |-
                            Resource references a Kubernetes instance in the management
                            cluster to fetch and use during template instantiation.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                                TODO: this design is not final and this field is subject to change in the future.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - identifier
                      - resource
                      type: object
                    type: array
                  validateHealths:
                    description: |-
                      ValidateHealths is a slice of Lua functions to run against
                      the managed cluster to validate the state of those add-ons/applications
                      is healthy
                    items:
                      properties:
                        featureID:
                          description: |-
                            FeatureID is an indentifier of the feature (Helm/Kustomize/Resources)
                            This field indicates when to run this check.
                            For instance:
                            - if set to Helm this check will be run after all helm
                            charts specified in the ClusterProfile are deployed.
                            - if set to Resources this check will be run after the content
                            of all the ConfigMaps/Secrets referenced by ClusterProfile in the
                            PolicyRef sections is deployed
                          enum:
                          - Resources
                          - Helm
                          - Kustomize
                          type: string
                        group:
                          description: Group of the resource to fetch in the managed
                            Cluster.
                          type: string
                        kind:
                          description: Kind of the resource to fetch in the managed
                            Cluster.
                          minLength: 1
                          type: string
                        labelFilters:
                          description: LabelFilters allows to filter resources based
                            on current labels.
                          items:
                            properties:
                              key:
                                description: Key is the label key
                                type: string
                              operation:
                                description: Operation is the comparison operation
                                enum:
                                - Equal
                                - Different
                                type: string
                              value:
                                description: Value is the label value
                                type: string
                            required:
                            - key
                            - operation
                            - value
                            type: object
                          type: array
                        name:
                          description: Name is the name of this check
                          type: string
                        namespace:
                          description: |-
                            Namespace of the resource to fetch in the managed Cluster.
                            Empty for resources scoped at cluster level.
                          type: string
                        script:
                          description: |-
                            Script is a text containing a lua script.
                            Must return struct with field "health"
                            representing whether object is a match (true or false)
                          type: string
                        version:
                          description: Version of the resource to fetch in the managed
                            Cluster.
                          type: string
                      required:
                      - featureID
                      - group
                      - kind
                      - name
                      - version
                      type: object
                    type: array
                type: object
              clusterType:
                description: ClusterType is the type of Cluster
                type: string
            required:
            - clusterName
            - clusterNamespace
            - clusterType
            type: object
          status:
            description: ClusterSummaryStatus defines the observed state of ClusterSummary
            properties:
              dependencies:
                description: |-
                  Dependencies is a summary reporting the status of the dependencies
                  for the associated ClusterProfile
                type: string
              featureSummaries:
                description: |-
                  FeatureSummaries reports the status of each workload cluster feature
                  directly managed by ClusterProfile.
                items:
                  description: |-
                    FeatureSummary contains a summary of the state of a workload
                    cluster feature.
                  properties:
                    deployedGroupVersionKind:
                      description: |-
                        DeployedGroupVersionKind contains all GroupVersionKinds deployed in either
                        the workload cluster or the management cluster because of this feature.
                        Each element has format kind.version.group
                      items:
                        type: string
                      type: array
                    failureMessage:
                      description: FailureMessage provides more information about
                        the error.
                      type: string
                    failureReason:
                      description: FailureReason indicates the type of error that
                        occurred.
                      type: string
                    featureID:
                      description: FeatureID is an indentifier of the feature whose
                        status is reported
                      enum:
                      - Resources
                      - Helm
                      - Kustomize
                      type: string
                    hash:
                      description: |-
                        Hash represents of a unique value for a feature at a fixed point in
                        time
                      format: byte
                      type: string
                    lastAppliedTime:
                      description: LastAppliedTime is the time feature was last reconciled
                      format: date-time
                      type: string
                    status:
                      description: Status represents the state of the feature in the
                        workload cluster
                      enum:
                      - Provisioning
                      - Provisioned
                      - Failed
                      - FailedNonRetriable
                      - Removing
                      - Removed
                      type: string
                  required:
                  - featureID
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              helmReleaseSummaries:
                description: |-
                  HelmReleaseSummaries reports the status of each helm chart
                  directly managed by ClusterProfile.
                items:
                  properties:
                    conflictMessage:
                      description: |-
                        Status indicates whether ClusterSummary can manage the helm
                        chart or there is a conflict
                      type: string
                    metadataHash:
                      description: |-
                        MetadataHash represents of a unique value for the extra metadata, extraLabels
                        and extraAnnotations, deployed on this helm chart
                      format: byte
                      type: string
                    releaseName:
                      description: ReleaseName is the chart release
                      minLength: 1
                      type: string
                    releaseNamespace:
                      description: ReleaseNamespace is the namespace release will
                        be installed
                      minLength: 1
                      type: string
                    status:
                      description: |-
                        Status indicates whether ClusterSummary can manage the helm
                        chart or there is a conflict
                      enum:
                      - Managing
                      - Conflict
                      type: string
                  required:
                  - releaseName
                  - releaseNamespace
                  - status
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: profiles.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: Profile
    listKind: ProfileList
    plural: profiles
    singular: profile
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Profile is the Schema for the profiles API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              clusterRefs:
                description: ClusterRefs identifies clusters to associate to.
                items:
                  description: |-
                    ObjectReference contains enough information to let you inspect or modify the referred object.
                    ---
                    New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                     1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                     2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                        restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                        Those cannot be well described when embedded.
                     3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                     4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                        during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                        and the version of the actual struct is irrelevant.
                     5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.

                    Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                    For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              clusterSelector:
                description: ClusterSelector identifies clusters to associate to.
                type: string
              dependsOn:
                description: |-
                  DependsOn specifies a list of other ClusterProfiles that this instance depends on.
                  In any managed cluster that matches this ClusterProfile, the add-ons and applications
                  defined in this instance will not be deployed until all add-ons and applications in the
                  ClusterProfiles listed as dependencies are deployed.
                items:
                  type: string
                type: array
              extraAnnotations:
                additionalProperties:
                  type: string
                description: |-
                  ExtraAnnotations: These annotations will be added by Sveltos to all Kubernetes resources
                  deployed in a managed cluster based on this ClusterProfile/Profile instance.
                  **Important:** If a resource deployed by Sveltos already has a annotation with a key present in
                  `ExtraAnnotations`, the value from `ExtraAnnotations` will override the existing value.
                type: object
              extraLabels:
                additionalProperties:
                  type: string
                description: |-
                  ExtraLabels: These labels will be added by Sveltos to all Kubernetes resources deployed in
                  a managed cluster based on this ClusterProfile/Profile instance.
                  **Important:** If a resource deployed by Sveltos already has a label with a key present in
                  `ExtraLabels`, the value from `ExtraLabels` will override the existing value.
                type: object
              helmCharts:
                description: Helm charts is a list of helm charts that need to be
                  deployed
                items:
                  properties:
                    chartName:
                      description: ChartName is the chart name
                      minLength: 1
                      type: string
                    chartVersion:
                      description: ChartVersion is the chart version
                      minLength: 1
                      type: string
                    helmChartAction:
                      default: Install
                      description: HelmChartAction is the action that will be taken
                        on the helm chart
                      enum:
                      - Install
                      - Uninstall
                      type: string
                    options:
                      description: Options allows to set flags which are used during
                        installation.
                      properties:
                        atomic:
                          default: false
                          description: |-
                            if set, the installation process deletes the installation on failure.
                            The --wait flag will be set automatically if --atomic is used
                            Default to false
                          type: boolean
                        createNamespace:
                          default: true
                          description: Create the release namespace if not present.
                            Defaults to true
                          type: boolean
                        dependencyUpdate:
                          default: false
                          description: |-
                            update dependencies if they are missing before installing the chart
                            Default to false
                          type: boolean
                        disableHooks:
                          default: false
                          description: |-
                            prevent hooks from running during install
                            Default to false
                          type: boolean
                        disableOpenAPIValidation:
                          default: false
                          description: |-
                            if set, the installation process will not validate rendered templates against the Kubernetes OpenAPI Schema
                            Default to false
                          type: boolean
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels that would be added to release metadata.
                          type: object
                        skipCRDs:
                          default: false
                          description: |-
                            SkipCRDs controls whether CRDs should be installed during install/upgrade operation.
                            By default, CRDs are installed if not already present.
                          type: boolean
                        timeout:
                          description: time to wait for any individual Kubernetes
                            operation (like Jobs for hooks) (default 5m0s)
                          type: string
                        wait:
                          default: false
                          description: |-
                            if set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet
                            are in a ready state before marking the release as successful. It will wait for as long as --timeout
                            Default to false
                          type: boolean
                        waitForJobs:
                          default: false
                          description: |-
                            if set and --wait enabled, will wait until all Jobs have been completed before marking the release as successful.
                            It will wait for as long as --timeout
                            Default to false
                          type: boolean
                      type: object
                    releaseName:
                      description: ReleaseName is the chart release
                      minLength: 1
                      type: string
                    releaseNamespace:
                      description: ReleaseNamespace is the namespace release will
                        be installed
                      minLength: 1
                      type: string
                    repositoryName:
                      description: RepositoryName is the name helm chart repository
                      minLength: 1
                      type: string
                    repositoryURL:
                      description: RepositoryURL is the URL helm chart repository
                      minLength: 1
                      type: string
                    values:
                      description: |-
                        Values holds the values for this Helm release.
                        Go templating with the values from the referenced CAPI Cluster.
                        Currently following can be referenced:
                        - Cluster => CAPI Cluster for instance
                        - KubeadmControlPlane => the CAPI Cluster controlPlaneRef
                        - InfrastructureProvider => the CAPI cluster infrastructure provider
                        - SecretRef => store any confindetial information in a Secret, set SecretRef then reference it
                      type: string
                  required:
                  - chartName
                  - chartVersion
                  - releaseName
                  - releaseNamespace
                  - repositoryName
                  - repositoryURL
                  type: object
                type: array
              kustomizationRefs:
                description: |-
                  Kustomization refs is a list of kustomization paths. Kustomization will
                  be run on those paths and the outcome will be deployed.
                items:
                  properties:
                    deploymentType:
                      default: Remote
                      description: |-
                        DeploymentType indicates whether resources need to be deployed
                        into the management cluster (local) or the managed cluster (remote)
                      enum:
                      - Local
                      - Remote
                      type: string
                    kind:
                      description: |-
                        Kind of the resource. Supported kinds are:
                        - flux GitRepository;OCIRepository;Bucket
                        - ConfigMap/Secret
                      enum:
                      - GitRepository
                      - OCIRepository
                      - Bucket
                      - ConfigMap
                      - Secret
                      type: string
                    name:
                      description: Name of the referenced resource.
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced resource.
                        For ClusterProfile namespace can be left empty. In such a case, namespace will
                        be implicit set to cluster's namespace.
                        For Profile namespace must be left empty. The Profile namespace will be used.
                      type: string
                    path:
                      description: |-
                        Path to the directory containing the kustomization.yaml file, or the
                        set of plain YAMLs a kustomization.yaml should be generated for.
                        Defaults to 'None', which translates to the root path of the SourceRef.
                      type: string
                    targetNamespace:
                      description: |-
                        TargetNamespace sets or overrides the namespace in the
                        kustomization.yaml file.
                      maxLength: 63
                      minLength: 1
                      type: string
                  required:
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
              maxUpdate:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  The maximum number of clusters that can be updated concurrently.
                  Value can be an absolute number (ex: 5) or a percentage of desired cluster (ex: 10%).
                  Defaults to 100%.
                  Example: when this is set to 30%, when list of add-ons/applications in ClusterProfile
                  changes, only 30% of matching clusters will be updated in parallel. Only when updates
                  in those cluster succeed, other matching clusters are updated.
                pattern: ^((100|[0-9]{1,2})%|[0-9]+)$
                x-kubernetes-int-or-string: true
              policyRefs:
                description: |-
                  PolicyRefs references all the ConfigMaps/Secrets containing kubernetes resources
                  that need to be deployed in the matching CAPI clusters.
                items:
                  properties:
                    deploymentType:
                      default: Remote
                      description: |-
                        DeploymentType indicates whether resources need to be deployed
                        into the management cluster (local) or the managed cluster (remote)
                      enum:
                      - Local
                      - Remote
                      type: string
                    kind:
                      description: |-
                        Kind of the resource. Supported kinds are:
                        - ConfigMap/Secret
                        - flux GitRepository;OCIRepository;Bucket
                      enum:
                      - GitRepository
                      - OCIRepository
                      - Bucket
                      - ConfigMap
                      - Secret
                      type: string
                    name:
                      description: Name of the referenced resource.
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced resource.
                        For ClusterProfile namespace can be left empty. In such a case, namespace will
                        be implicit set to cluster's namespace.
                        For Profile namespace must be left empty. Profile namespace will be used.
                      type: string
                    path:
                      description: |-
                        Path to the directory containing the YAML files.
                        Defaults to 'None', which translates to the root path of the SourceRef.
                        Used only for GitRepository;OCIRepository;Bucket
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
              reloader:
                default: false
                description: |-
                  Reloader indicates whether Deployment/StatefulSet/DaemonSet instances deployed
                  by Sveltos and part of this ClusterProfile need to be restarted via rolling upgrade
                  when a ConfigMap/Secret instance mounted as volume is modified.
                  When set to true, when any mounted ConfigMap/Secret is modified, Sveltos automatically
                  starts a rolling upgrade for Deployment/StatefulSet/DaemonSet instances mounting it.
                type: boolean
              stopMatchingBehavior:
                default: WithdrawPolicies
                description: |-
                  StopMatchingBehavior indicates what behavior should be when a Cluster stop matching
                  the ClusterProfile. By default all deployed Helm charts and Kubernetes resources will
                  be withdrawn from Cluster. Setting StopMatchingBehavior to LeavePolicies will instead
                  leave ClusterProfile deployed policies in the Cluster.
                type: string
              syncMode:
                default: Continuous
                description: |-
                  SyncMode specifies how features are synced in a matching workload cluster.
                  - OneTime means, first time a workload cluster matches the ClusterProfile,
                  features will be deployed in such cluster. Any subsequent feature configuration
                  change won't be applied into the matching workload clusters;
                  - Continuous means first time a workload cluster matches the ClusterProfile,
                  features will be deployed in such a cluster. Any subsequent feature configuration
                  change will be applied into the matching workload clusters.
                  - DryRun means no change will be propagated to any matching cluster. A report
                  instead will be generated summarizing what would happen in any matching cluster
                  because of the changes made to ClusterProfile while in DryRun mode.
                enum:
                - OneTime
                - Continuous
                - ContinuousWithDriftDetection
                - DryRun
                type: string
              templateResourceRefs:
                description: |-
                  TemplateResourceRefs is a list of resource to collect from the management cluster.
                  Those resources' values will be used to instantiate templates contained in referenced
                  PolicyRefs and Helm charts
                items:
                  properties:
                    identifier:
                      description: |-
                        Identifier is how the resource will be referred to in the
                        template
                      type: string
                    resource:
                      description: |-
                        Resource references a Kubernetes instance in the management
                        cluster to fetch and use during template instantiation.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                            TODO: this design is not final and this field is subject to change in the future.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - identifier
                  - resource
                  type: object
                type: array
              validateHealths:
                description: |-
                  ValidateHealths is a slice of Lua functions to run against
                  the managed cluster to validate the state of those add-ons/applications
                  is healthy
                items:
                  properties:
                    featureID:
                      description: |-
                        FeatureID is an indentifier of the feature (Helm/Kustomize/Resources)
                        This field indicates when to run this check.
                        For instance:
                        - if set to Helm this check will be run after all helm
                        charts specified in the ClusterProfile are deployed.
                        - if set to Resources this check will be run after the content
                        of all the ConfigMaps/Secrets referenced by ClusterProfile in the
                        PolicyRef sections is deployed
                      enum:
                      - Resources
                      - Helm
                      - Kustomize
                      type: string
                    group:
                      description: Group of the resource to fetch in the managed Cluster.
                      type: string
                    kind:
                      description: Kind of the resource to fetch in the managed Cluster.
                      minLength: 1
                      type: string
                    labelFilters:
                      description: LabelFilters allows to filter resources based on
                        current labels.
                      items:
                        properties:
                          key:
                            description: Key is the label key
                            type: string
                          operation:
                            description: Operation is the comparison operation
                            enum:
                            - Equal
                            - Different
                            type: string
                          value:
                            description: Value is the label value
                            type: string
                        required:
                        - key
                        - operation
                        - value
                        type: object
                      type: array
                    name:
                      description: Name is the name of this check
                      type: string
                    namespace:
                      description: |-
                        Namespace of the resource to fetch in the managed Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    script:
                      description: |-
                        Script is a text containing a lua script.
                        Must return struct with field "health"
                        representing whether object is a match (true or false)
                      type: string
                    version:
                      description: Version of the resource to fetch in the managed
                        Cluster.
                      type: string
                  required:
                  - featureID
                  - group
                  - kind
                  - name
                  - version
                  type: object
                type: array
            type: object
          status:
            description: Status defines the observed state of ClusterProfile/Profile
            properties:
              matchingClusters:
                description: |-
                  MatchingClusterRefs reference all the clusters currently matching
                  ClusterProfile ClusterSelector
                items:
                  description: |-
                    ObjectReference contains enough information to let you inspect or modify the referred object.
                    ---
                    New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                     1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                     2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                        restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                        Those cannot be well described when embedded.
                     3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                     4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                        during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                        and the version of the actual struct is irrelevant.
                     5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.

                    Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                    For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              updatedClusters:
                description: |-
                  UpdatedClusters contains information all the cluster currently matching
                  ClusterProfile ClusterSelector and already updated to latest ClusterProfile
                  Spec
                properties:
                  clusters:
                    description: |-
                      Clusters reference all the clusters currently matching
                      ClusterProfile ClusterSelector and already updated/being updated
                      to ClusterProfile Spec
                    items:
                      description: |-
                        ObjectReference contains enough information to let you inspect or modify the referred object.
                        ---
                        New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                         1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                         2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                            restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                            Those cannot be well described when embedded.
                         3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                         4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                            during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                            and the version of the actual struct is irrelevant.
                         5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                            will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.

                        Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                        For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                            TODO: this design is not final and this field is subject to change in the future.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  hash:
                    description: |-
                      Hash represents of a unique value for ClusterProfile Spec at
                      a fixed point in time
                    format: byte
                    type: string
                type: object
              updatingClusters:
                description: |-
                  UpdatingClusters reference all the cluster currently matching
                  ClusterProfile ClusterSelector and being updated
                properties:
                  clusters:
                    description: |-
                      Clusters reference all the clusters currently matching
                      ClusterProfile ClusterSelector and already updated/being updated
                      to ClusterProfile Spec
                    items:
                      description: |-
                        ObjectReference contains enough information to let you inspect or modify the referred object.
                        ---
                        New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                         1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                         2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                            restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                            Those cannot be well described when embedded.
                         3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                         4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                            during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                            and the version of the actual struct is irrelevant.
                         5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                            will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.

                        Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                        For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                            TODO: this design is not final and this field is subject to change in the future.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  hash:
                    description: |-
                      Hash represents of a unique value for ClusterProfile Spec at
                      a fixed point in time
                    format: byte
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: addon-controller
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: addon-controller-role-extra
  namespace: projectsveltos
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addon-controller-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - impersonate
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterconfigurations/status
  verbs:
  - get
  - list
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterreports
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterreports/status
  verbs:
  - get
  - list
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - profiles
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - profiles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - profiles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - controlplane.cluster.x-k8s.io
  resources:
  - kubeadmcontrolplanes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extension.projectsveltos.io
  resources:
  - jsonnetsources
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extension.projectsveltos.io
  resources:
  - yttsources
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - gitrepositories
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - gitrepositories/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - ocirepositories
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - ocirepositories/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addon-controller-role-extra
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: addon-controller-rolebinding-extra
  namespace: projectsveltos
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: addon-controller-role-extra
subjects:
- kind: ServiceAccount
  name: addon-controller
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: addon-controller-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: addon-controller-role
subjects:
- kind: ServiceAccount
  name: addon-controller
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: addon-controller-rolebinding-extra
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: addon-controller-role-extra
subjects:
- kind: ServiceAccount
  name: addon-controller
  namespace: projectsveltos
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: addon-controller
  name: addon-controller
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: addon-controller
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: controller
      labels:
        control-plane: addon-controller
    spec:
      containers:
      - args:
        - --diagnostics-address=:8443
        - --report-mode=0
        - --agent-in-mgmt-cluster
        - --shard-key=
        - --v=5
        - --version=v0.25.0
        command:
        - /manager
        image: projectsveltos/addon-controller-amd64:v0.25.0
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: controller
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      securityContext:
        runAsNonRoot: true
      serviceAccountName: addon-controller
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: tmp
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    control-plane: addon-controller
  name: fm-controller-manager-metrics-monitor
  namespace: projectsveltos
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  selector:
    matchLabels:
      control-plane: addon-controller
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: access-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: access-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - accessrequests
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - accessrequests/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - accessrequests/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifierreports
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - eventreports
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - healthcheckreports
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - rolerequests
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - rolerequests/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - rolerequests/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: access-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: access-manager-role
subjects:
- kind: ServiceAccount
  name: access-manager
  namespace: projectsveltos
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: access-manager
  name: access-manager
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: access-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: access-manager
    spec:
      containers:
      - args:
        - --diagnostics-address=:8443
        - --v=5
        command:
        - /manager
        image: projectsveltos/access-manager-amd64:v0.25.0
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: access-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sc-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sc-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sc-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sc-manager-role
subjects:
- kind: ServiceAccount
  name: sc-manager
  namespace: projectsveltos
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: sc-manager
  name: sc-manager
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: sc-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: sc-manager
    spec:
      containers:
      - args:
        - --diagnostics-address=:8443
        - --shard-key=
        - --v=5
        command:
        - /manager
        image: projectsveltos/sveltoscluster-manager-amd64:v0.25.0
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: sc-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hc-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hc-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clusterhealthchecks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clusterhealthchecks/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clusterhealthchecks/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - healthcheckreports
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - healthchecks
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - reloaderreports
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hc-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hc-manager-role
subjects:
- kind: ServiceAccount
  name: hc-manager
  namespace: projectsveltos
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: hc-manager
  name: hc-manager
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: hc-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: hc-manager
    spec:
      containers:
      - args:
        - --diagnostics-address=:8443
        - --shard-key=
        - --v=5
        command:
        - /manager
        image: projectsveltos/healthcheck-manager-amd64:v0.25.0
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: hc-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: eventtriggers.lib.projectsveltos.io
spec:
  group: lib.projectsveltos.io
  names:
    kind: EventTrigger
    listKind: EventTriggerList
    plural: eventtriggers
    singular: eventtrigger
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EventTrigger is the Schema for the eventtriggers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EventTriggerSpec defines the desired state of EventTrigger
            properties:
              destinationClusterSelector:
                description: |-
                  DestinationClusterSelector identifies the cluster where add-ons will be deployed.
                  By default, this is nil and add-ons will be deployed in the very same cluster the
                  event happened.
                  If DestinationClusterSelector is set though, when an event happens in any of the
                  cluster identified by SourceClusterSelector, add-ons will be deployed in each of
                  the cluster indentified by DestinationClusterSelector.
                type: string
              eventSourceName:
                description: |-
                  EventSourceName is the name of the referenced EventSource.
                  Resources contained in the referenced ConfigMaps/Secrets and HelmCharts
                  will be customized using information from resources matching the EventSource
                  in the managed cluster.
                type: string
              extraAnnotations:
                additionalProperties:
                  type: string
                description: |-
                  ExtraAnnotations: These annotations will be added by Sveltos to all Kubernetes resources
                  deployed in a managed cluster based on this ClusterProfile/Profile instance.
                  **Important:** If a resource deployed by Sveltos already has a annotation with a key present in
                  `ExtraAnnotations`, the value from `ExtraAnnotations` will override the existing value.
                type: object
              extraLabels:
                additionalProperties:
                  type: string
                description: |-
                  ExtraLabels: These labels will be added by Sveltos to all Kubernetes resources deployed in
                  a managed cluster based on this ClusterProfile/Profile instance.
                  **Important:** If a resource deployed by Sveltos already has a label with a key present in
                  `ExtraLabels`, the value from `ExtraLabels` will override the existing value.
                type: object
              helmCharts:
                description: Helm charts to be deployed in the matching clusters based
                  on EventSource.
                items:
                  properties:
                    chartName:
                      description: ChartName is the chart name
                      minLength: 1
                      type: string
                    chartVersion:
                      description: ChartVersion is the chart version
                      minLength: 1
                      type: string
                    helmChartAction:
                      default: Install
                      description: HelmChartAction is the action that will be taken
                        on the helm chart
                      enum:
                      - Install
                      - Uninstall
                      type: string
                    options:
                      description: Options allows to set flags which are used during
                        installation.
                      properties:
                        atomic:
                          default: false
                          description: |-
                            if set, the installation process deletes the installation on failure.
                            The --wait flag will be set automatically if --atomic is used
                            Default to false
                          type: boolean
                        createNamespace:
                          default: true
                          description: Create the release namespace if not present.
                            Defaults to true
                          type: boolean
                        dependencyUpdate:
                          default: false
                          description: |-
                            update dependencies if they are missing before installing the chart
                            Default to false
                          type: boolean
                        disableHooks:
                          default: false
                          description: |-
                            prevent hooks from running during install
                            Default to false
                          type: boolean
                        disableOpenAPIValidation:
                          default: false
                          description: |-
                            if set, the installation process will not validate rendered templates against the Kubernetes OpenAPI Schema
                            Default to false
                          type: boolean
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels that would be added to release metadata.
                          type: object
                        skipCRDs:
                          default: false
                          description: |-
                            SkipCRDs controls whether CRDs should be installed during install/upgrade operation.
                            By default, CRDs are installed if not already present.
                          type: boolean
                        timeout:
                          description: time to wait for any individual Kubernetes
                            operation (like Jobs for hooks) (default 5m0s)
                          type: string
                        wait:
                          default: false
                          description: |-
                            if set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet
                            are in a ready state before marking the release as successful. It will wait for as long as --timeout
                            Default to false
                          type: boolean
                        waitForJobs:
                          default: false
                          description: |-
                            if set and --wait enabled, will wait until all Jobs have been completed before marking the release as successful.
                            It will wait for as long as --timeout
                            Default to false
                          type: boolean
                      type: object
                    releaseName:
                      description: ReleaseName is the chart release
                      minLength: 1
                      type: string
                    releaseNamespace:
                      description: ReleaseNamespace is the namespace release will
                        be installed
                      minLength: 1
                      type: string
                    repositoryName:
                      description: RepositoryName is the name helm chart repository
                      minLength: 1
                      type: string
                    repositoryURL:
                      description: RepositoryURL is the URL helm chart repository
                      minLength: 1
                      type: string
                    values:
                      description: |-
                        Values holds the values for this Helm release.
                        Go templating with the values from the referenced CAPI Cluster.
                        Currently following can be referenced:
                        - Cluster => CAPI Cluster for instance
                        - KubeadmControlPlane => the CAPI Cluster controlPlaneRef
                        - InfrastructureProvider => the CAPI cluster infrastructure provider
                        - SecretRef => store any confindetial information in a Secret, set SecretRef then reference it
                      type: string
                  required:
                  - chartName
                  - chartVersion
                  - releaseName
                  - releaseNamespace
                  - repositoryName
                  - repositoryURL
                  type: object
                type: array
              kustomizationRefs:
                description: Kustomization refs
                items:
                  properties:
                    deploymentType:
                      default: Remote
                      description: |-
                        DeploymentType indicates whether resources need to be deployed
                        into the management cluster (local) or the managed cluster (remote)
                      enum:
                      - Local
                      - Remote
                      type: string
                    kind:
                      description: |-
                        Kind of the resource. Supported kinds are:
                        - flux GitRepository;OCIRepository;Bucket
                        - ConfigMap/Secret
                      enum:
                      - GitRepository
                      - OCIRepository
                      - Bucket
                      - ConfigMap
                      - Secret
                      type: string
                    name:
                      description: Name of the referenced resource.
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced resource.
                        For ClusterProfile namespace can be left empty. In such a case, namespace will
                        be implicit set to cluster's namespace.
                        For Profile namespace must be left empty. The Profile namespace will be used.
                      type: string
                    path:
                      description: |-
                        Path to the directory containing the kustomization.yaml file, or the
                        set of plain YAMLs a kustomization.yaml should be generated for.
                        Defaults to 'None', which translates to the root path of the SourceRef.
                      type: string
                    targetNamespace:
                      description: |-
                        TargetNamespace sets or overrides the namespace in the
                        kustomization.yaml file.
                      maxLength: 63
                      minLength: 1
                      type: string
                  required:
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
              maxUpdate:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  The maximum number of clusters that can be updated concurrently.
                  Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                  Defaults to 100%.
                  Example: when this is set to 30%, when list of add-ons/applications in ClusterProfile
                  changes, only 30% of matching clusters will be updated in parallel. Only when updates
                  in those cluster succeed, other matching clusters are updated.
                pattern: ^((100|[0-9]{1,2})%|[0-9]+)$
                x-kubernetes-int-or-string: true
              oneForEvent:
                description: |-
                  Multiple resources in a managed cluster can be a match for referenced
                  EventSource. OneForEvent indicates whether a ClusterProfile for all
                  resource (OneForEvent = false) or one per resource (OneForEvent = true)
                  needs to be creted.
                type: boolean
              policyRefs:
                description: |-
                  PolicyRefs references all the ConfigMaps/Secrets containing kubernetes resources
                  that need to be deployed in the matching clusters based on EventSource.
                items:
                  properties:
                    deploymentType:
                      default: Remote
                      description: |-
                        DeploymentType indicates whether resources need to be deployed
                        into the management cluster (local) or the managed cluster (remote)
                      enum:
                      - Local
                      - Remote
                      type: string
                    kind:
                      description: |-
                        Kind of the resource. Supported kinds are:
                        - ConfigMap/Secret
                        - flux GitRepository;OCIRepository;Bucket
                      enum:
                      - GitRepository
                      - OCIRepository
                      - Bucket
                      - ConfigMap
                      - Secret
                      type: string
                    name:
                      description: Name of the referenced resource.
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced resource.
                        For ClusterProfile namespace can be left empty. In such a case, namespace will
                        be implicit set to cluster's namespace.
                        For Profile namespace must be left empty. Profile namespace will be used.
                      type: string
                    path:
                      description: |-
                        Path to the directory containing the YAML files.
                        Defaults to 'None', which translates to the root path of the SourceRef.
                        Used only for GitRepository;OCIRepository;Bucket
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
              reloader:
                default: false
                description: |-
                  Reloader indicates whether Deployment/StatefulSet/DaemonSet instances deployed
                  by Sveltos and part of this ClusterProfile need to be restarted via rolling upgrade
                  when a ConfigMap/Secret instance mounted as volume is modified.
                  When set to true, when any mounted ConfigMap/Secret is modified, Sveltos automatically
                  starts a rolling upgrade for Deployment/StatefulSet/DaemonSet instances mounting it.
                type: boolean
              sourceClusterSelector:
                description: |-
                  SourceClusterSelector identifies clusters to associate to.
                  This represents the set of clusters where Sveltos will watch for
                  events defined by referenced EventSource
                type: string
              stopMatchingBehavior:
                default: WithdrawPolicies
                description: |-
                  StopMatchingBehavior indicates what behavior should be when a Cluster stop matching
                  the ClusterProfile. By default all deployed Helm charts and Kubernetes resources will
                  be withdrawn from Cluster. Setting StopMatchingBehavior to LeavePolicies will instead
                  leave ClusterProfile deployed policies in the Cluster.
                type: string
              syncMode:
                default: Continuous
                description: |-
                  SyncMode specifies how features are synced in a matching workload cluster.
                  - OneTime means, first time a workload cluster matches the ClusterProfile,
                  features will be deployed in such cluster. Any subsequent feature configuration
                  change won't be applied into the matching workload clusters;
                  - Continuous means first time a workload cluster matches the ClusterProfile,
                  features will be deployed in such a cluster. Any subsequent feature configuration
                  change will be applied into the matching workload clusters.
                  - DryRun means no change will be propagated to any matching cluster. A report
                  instead will be generated summarizing what would happen in any matching cluster
                  because of the changes made to ClusterProfile while in DryRun mode.
                enum:
                - OneTime
                - Continuous
                - ContinuousWithDriftDetection
                - DryRun
                type: string
              templateResourceRefs:
                description: |-
                  TemplateResourceRefs is a list of resource to collect from the management cluster.
                  Those resources' values will be used to instantiate templates contained in referenced
                  PolicyRefs and Helm charts
                items:
                  properties:
                    identifier:
                      description: |-
                        Identifier is how the resource will be referred to in the
                        template
                      type: string
                    resource:
                      description: |-
                        Resource references a Kubernetes instance in the management
                        cluster to fetch and use during template instantiation.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                            TODO: this design is not final and this field is subject to change in the future.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - identifier
                  - resource
                  type: object
                type: array
              validateHealths:
                description: |-
                  ValidateHealths is a slice of Lua functions to run against
                  the managed cluster to validate the state of those add-ons/applications
                  is healthy
                items:
                  properties:
                    featureID:
                      description: |-
                        FeatureID is an indentifier of the feature (Helm/Kustomize/Resources)
                        This field indicates when to run this check.
                        For instance:
                        - if set to Helm this check will be run after all helm
                        charts specified in the ClusterProfile are deployed.
                        - if set to Resources this check will be run after the content
                        of all the ConfigMaps/Secrets referenced by ClusterProfile in the
                        PolicyRef sections is deployed
                      enum:
                      - Resources
                      - Helm
                      - Kustomize
                      type: string
                    group:
                      description: Group of the resource to fetch in the managed Cluster.
                      type: string
                    kind:
                      description: Kind of the resource to fetch in the managed Cluster.
                      minLength: 1
                      type: string
                    labelFilters:
                      description: LabelFilters allows to filter resources based on
                        current labels.
                      items:
                        properties:
                          key:
                            description: Key is the label key
                            type: string
                          operation:
                            description: Operation is the comparison operation
                            enum:
                            - Equal
                            - Different
                            type: string
                          value:
                            description: Value is the label value
                            type: string
                        required:
                        - key
                        - operation
                        - value
                        type: object
                      type: array
                    name:
                      description: Name is the name of this check
                      type: string
                    namespace:
                      description: |-
                        Namespace of the resource to fetch in the managed Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    script:
                      description: |-
                        Script is a text containing a lua script.
                        Must return struct with field "health"
                        representing whether object is a match (true or false)
                      type: string
                    version:
                      description: Version of the resource to fetch in the managed
                        Cluster.
                      type: string
                  required:
                  - featureID
                  - group
                  - kind
                  - name
                  - version
                  type: object
                type: array
            required:
            - eventSourceName
            - sourceClusterSelector
            type: object
          status:
            description: EventTriggerStatus defines the observed state of EventTrigger
            properties:
              clusterInfo:
                description: |-
                  ClusterInfo represent the deployment status in each managed
                  cluster.
                items:
                  properties:
                    cluster:
                      description: Cluster references the Cluster
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                            TODO: this design is not final and this field is subject to change in the future.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    failureMessage:
                      description: FailureMessage provides more information about
                        the error.
                      type: string
                    hash:
                      description: |-
                        Hash represents the hash of the Classifier currently deployed
                        in the Cluster
                      format: byte
                      type: string
                    status:
                      description: Status represents the state of the feature in the
                        workload cluster
                      enum:
                      - Provisioning
                      - Provisioned
                      - Failed
                      - Removing
                      - Removed
                      type: string
                  required:
                  - cluster
                  - hash
                  type: object
                type: array
              destinationMatchingClusterRefs:
                description: |-
                  DestinationMatchingClusterRefs reference all the cluster-api Cluster currently matching
                  ClusterProfile DestinationClusterSelector
                items:
                  description: |-
                    ObjectReference contains enough information to let you inspect or modify the referred object.
                    ---
                    New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                     1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                     2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                        restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                        Those cannot be well described when embedded.
                     3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                     4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                        during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                        and the version of the actual struct is irrelevant.
                     5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.

                    Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                    For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              matchingClusters:
                description: |-
                  MatchingClusterRefs reference all the cluster-api Cluster currently matching
                  ClusterProfile SourceClusterSelector
                items:
                  description: |-
                    ObjectReference contains enough information to let you inspect or modify the referred object.
                    ---
                    New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                     1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                     2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                        restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                        Those cannot be well described when embedded.
                     3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                     4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                        during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                        and the version of the actual struct is irrelevant.
                     5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.

                    Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                    For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: event-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: event-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - eventreports
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - eventsources
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - eventtriggers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - eventtriggers/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - eventtriggers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: event-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: event-manager-role
subjects:
- kind: ServiceAccount
  name: event-manager
  namespace: projectsveltos
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: event-manager
  name: event-manager
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: event-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: event-manager
    spec:
      containers:
      - args:
        - --diagnostics-address=:8443
        - --shard-key=
        - --v=5
        command:
        - /manager
        image: projectsveltos/event-manager-amd64:v0.25.0
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: event-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: classifier-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: classifier-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - accessrequests
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifierreports
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifiers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifiers/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifiers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: classifier-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: classifier-manager-role
subjects:
- kind: ServiceAccount
  name: classifier-manager
  namespace: projectsveltos
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: classifier
  name: classifier-manager
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: classifier
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: classifier
    spec:
      containers:
      - args:
        - --diagnostics-address=:8443
        - --report-mode=0
        - --agent-in-mgmt-cluster
        - --shard-key=
        - --v=5
        - --version=v0.25.0
        command:
        - /manager
        image: projectsveltos/classifier-amd64:v0.25.0
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 500m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: classifier-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: classifier-role-sveltos-agent-in-mgmt-cluster
  namespace: projectsveltos
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: classifier-rolebinding-sveltos-agent-in-mgmt-cluster
  namespace: projectsveltos
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: classifier-role-sveltos-agent-in-mgmt-cluster
subjects:
- kind: ServiceAccount
  name: classifier-manager
  namespace: projectsveltos
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sveltos-agent-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sveltos-agent-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sveltos-agent-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sveltos-agent-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sveltos-agent-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sveltos-agent-manager-role
subjects:
- kind: ServiceAccount
  name: sveltos-agent-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sveltos-agent-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sveltos-agent-proxy-role
subjects:
- kind: ServiceAccount
  name: sveltos-agent-manager
  namespace: projectsveltos
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: drift-detection-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: drift-detection-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: drift-detection-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: drift-detection-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: drift-detection-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: drift-detection-manager-role
subjects:
- kind: ServiceAccount
  name: drift-detection-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: drift-detection-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: drift-detection-proxy-role
subjects:
- kind: ServiceAccount
  name: drift-detection-manager
  namespace: projectsveltos
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: shard-controller
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: shard-controller
  name: shard-controller
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: shard-controller-role-extra
  namespace: projectsveltos
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: shard-manager-role
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: shard-controller-rolebinding-extra
  namespace: projectsveltos
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: shard-controller-role-extra
subjects:
- kind: ServiceAccount
  name: shard-controller
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: shard-controller
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: shard-controller
  name: shard-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: shard-manager-role
subjects:
- kind: ServiceAccount
  name: shard-controller
  namespace: projectsveltos
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: shard-controller
  name: shard-controller
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: shard-controller
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: shard-controller
    spec:
      containers:
      - args:
        - --diagnostics-address=:8443
        - --v=5
        - --report-mode=0
        - --agent-in-mgmt-cluster
        command:
        - /manager
        image: projectsveltos/shard-controller-amd64:v0.25.0
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: shard-controller
      terminationGracePeriodSeconds: 10
---
